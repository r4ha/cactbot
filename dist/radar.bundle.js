!function(e){var a={};function t(n){if(a[n])return a[n].exports;var r=a[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=a,t.d=function(e,a,n){t.o(e,a)||Object.defineProperty(e,a,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,a){if(1&a&&(e=t(e)),8&a)return e;if(4&a&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&a&&"string"!=typeof e)for(var r in e)t.d(n,r,function(a){return e[a]}.bind(null,r));return n},t.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(a,"a",a),a},t.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},t.p="",t(t.s=39)}({0:function(e,a,t){"use strict";t.d(a,"a",(function(){return i}));var n=t(4);const r=(e,a,t)=>{void 0===e&&(e={});const r=[];for(const e of Object.values(t))"object"==typeof e&&r.push(e.field);n.a.validateParams(e,a,["capture",...r]);const i=n.a.trueIfUndefined(e.capture),o=Object.keys(t);let s;if(i)s=o[o.length-1];else{s=0;for(const a of o){if("object"!=typeof t[a])continue;t[a].field in e&&(s=a)}}let l="^",d=-1;for(let r in t){r=parseInt(r);const o=r-d-1;1===o?l+="\\y{NetField}":o>1&&(l+="\\y{NetField}{"+o+"}"),d=r;const u=t[r];if("object"!=typeof u)throw new Error(`${a}: invalid value: ${JSON.stringify(u)}`);const c=t[r].field,m="value"in t[r]?t[r].value.toString():"[^|]*";if(l+=c?n.a.maybeCapture(i,c,e[c],m)+"\\|":m+"\\|",r>=s)break}return n.a.parse(l)};class i{static startsUsing(e){return r(e,"startsUsing",{0:{field:"type",value:"20"},1:{field:"timestamp"},2:{field:"sourceId"},3:{field:"source"},4:{field:"id"},5:{field:"ability"},6:{field:"targetId"},7:{field:"target"},8:{field:"castTime"}})}static ability(e){return r(e,"ability",{0:{field:"type",value:"2[12]"},1:{field:"timestamp"},2:{field:"sourceId"},3:{field:"source"},4:{field:"id"},5:{field:"ability"},6:{field:"targetId"},7:{field:"target"}})}static abilityFull(e){return r(e,"abilityFull",{0:{field:"type",value:"2[12]"},1:{field:"timestamp"},2:{field:"sourceId"},3:{field:"source"},4:{field:"id"},5:{field:"ability"},6:{field:"targetId"},7:{field:"target"},8:{field:"flags"},9:{field:"damage"},24:{field:"targetCurrentHp"},25:{field:"targetMaxHp"},40:{field:"x"},41:{field:"y"},42:{field:"z"},43:{field:"heading"}})}static headMarker(e){return r(e,"headMarker",{0:{field:"type",value:"27"},1:{field:"timestamp"},2:{field:"targetId"},3:{field:"target"},6:{field:"id"}})}static addedCombatant(e){return r(e,"addedCombatant",{0:{field:"type",value:"03"},1:{field:"timestamp"},2:{field:"id"},3:{field:"name"}})}static addedCombatantFull(e){return r(e,"addedCombatantFull",{0:{field:"type",value:"03"},1:{field:"timestamp"},2:{field:"id"},3:{field:"name"},4:{field:"job"},5:{field:"level"},6:{field:"ownerId"},8:{field:"world"},9:{field:"npcNameId"},10:{field:"npcBaseId"},11:{field:"currentHp"},12:{field:"hp"},17:{field:"x"},18:{field:"y"},19:{field:"z"},20:{field:"heading"}})}static removingCombatant(e){return r(e,"removingCombatant",{0:{field:"type",value:"04"},1:{field:"timestamp"},2:{field:"id"},3:{field:"name"},12:{field:"hp"}})}static gainsEffect(e){return r(e,"gainsEffect",{0:{field:"type",value:"26"},1:{field:"timestamp"},2:{field:"effectId"},3:{field:"effect"},4:{field:"duration"},5:{field:"sourceId"},6:{field:"source"},7:{field:"targetId"},8:{field:"target"},9:{field:"count"}})}static statusEffectExplicit(e){return r(e,"statusEffectExplicit",{0:{field:"type",value:"38"},1:{field:"timestamp"},2:{field:"targetId"},3:{field:"target"},5:{field:"hp"},6:{field:"maxHp"},11:{field:"x"},12:{field:"y"},13:{field:"z"},14:{field:"heading"},15:{field:"data0"},16:{field:"data1"},17:{field:"data2"},18:{field:"data3"},19:{field:"data4"}})}static losesEffect(e){return r(e,"losesEffect",{0:{field:"type",value:"30"},1:{field:"timestamp"},2:{field:"effectId"},3:{field:"effect"},5:{field:"sourceId"},6:{field:"source"},7:{field:"targetId"},8:{field:"target"},9:{field:"count"}})}static tether(e){return r(e,"tether",{0:{field:"type",value:"35"},1:{field:"timestamp"},2:{field:"sourceId"},3:{field:"source"},4:{field:"targetId"},5:{field:"target"},8:{field:"id"}})}static wasDefeated(e){return r(e,"wasDefeated",{0:{field:"type",value:"25"},1:{field:"timestamp"},2:{field:"targetId"},3:{field:"target"},4:{field:"sourceId"},5:{field:"source"}})}static echo(e){return void 0===e&&(e={}),n.a.validateParams(e,"echo",["type","timestamp","code","name","line","capture"]),e.code="0038",i.gameLog(e)}static dialog(e){return void 0===e&&(e={}),n.a.validateParams(e,"dialog",["type","timestamp","code","name","line","capture"]),e.code="0044",i.gameLog(e)}static message(e){return void 0===e&&(e={}),n.a.validateParams(e,"message",["type","timestamp","code","name","line","capture"]),e.code="0839",i.gameLog(e)}static gameLog(e){return r(e,"gameLog",{0:{field:"type",value:"00"},1:{field:"timestamp"},2:{field:"code"},3:{field:"name"},4:{field:"line"}})}static gameNameLog(e){return i.gameLog(e)}static statChange(e){return r(e,"statChange",{0:{field:"type",value:"12"},1:{field:"timestamp"},2:{field:"job"},3:{field:"strength"},4:{field:"dexterity"},5:{field:"vitality"},6:{field:"intelligence"},7:{field:"mind"},8:{field:"piety"},9:{field:"attackPower"},10:{field:"directHit"},11:{field:"criticalHit"},12:{field:"attackMagicPotency"},13:{field:"healMagicPotency"},14:{field:"determination"},15:{field:"skillSpeed"},16:{field:"spellSpeed"},18:{field:"tenacity"}})}static changeZone(e){return r(e,"changeZone",{0:{field:"type",value:"01"},1:{field:"timestamp"},2:{field:"id"},3:{field:"name"}})}static network6d(e){return r(e,"network6d",{0:{field:"type",value:"33"},1:{field:"timestamp"},2:{field:"instance"},3:{field:"command"},4:{field:"data0"},5:{field:"data1"},6:{field:"data2"},7:{field:"data3"}})}}},1:function(e,a,t){"use strict";t.d(a,"b",(function(){return n})),t.d(a,"a",(function(){return h}));const n=["alarmText","alertText","infoText","response","tts"],r={info:"infoText",alert:"alertText",alarm:"alarmText"},i=e=>{if(!(e in r))throw new Error(`Invalid severity: ${e}.`);return r[e]},o=e=>e?i(e):"infoText",s=e=>e?i(e):"alertText",l=e=>e?i(e):"alarmText",d=e=>e&&e.target!==e.source?e.target||e[1]:null,u=e=>e.source||e[0],c=function(e,a,t,n){const r={};return e!==t?(r[e]=a,r[t]=n):r[e]=(e,t,r)=>{a(e,t,r)||n(e,t,r)},r},m=e=>"4"!==e[0],p=(e,a)=>(t,n,r)=>(r.responseOutputStrings={text:a},{[e]:(e,a,t)=>t.text()}),h={tankBuster:(e,a)=>{const t={noTarget:{en:"Tank Buster",de:"Tank buster",fr:"Tank buster",ja:"タンクバスター",cn:"坦克死刑",ko:"탱버"},busterOnYou:{en:"Tank Buster on YOU",de:"Tank buster auf DIR",fr:"Tank buster sur VOUS",ja:"自分にタンクバスター",cn:"死刑点名",ko:"탱버 대상자"},busterOnTarget:{en:"Tank Buster on ${player}",de:"Tank buster auf ${player}",fr:"Tank buster sur ${player}",ja:"${player}にタンクバスター",cn:"死刑 点 ${player}",ko:'"${player}" 탱버'}},n=c(s(e),(e,a,t)=>{const n=d(a);if(!n){if("tank"!==e.role&&"healer"!==e.role)return;return t.noTarget()}if(n===e.me)return t.busterOnYou()},o(a),(e,a,t)=>{const n=d(a);if(!n){if("tank"===e.role||"healer"===e.role)return;return t.noTarget()}if(n!==e.me)return t.busterOnTarget({player:e.ShortName(n)})});return(e,a,r)=>(r.responseOutputStrings=t,n)},tankBusterSwap:(e,a)=>{const t={tankSwap:{en:"Tank Swap!",de:"Tankwechsel!",fr:"Tank swap !",ja:"タンクスイッチ",cn:"换T！",ko:"탱 교대"},busterOnYou:{en:"Tank Buster on YOU",de:"Tank buster auf DIR",fr:"Tank buster sur VOUS",ja:"自分にタンクバスター",cn:"死刑点名",ko:"탱버 대상자"},busterOnTarget:{en:"Tank Buster on ${player}",de:"Tank buster auf ${player}",fr:"Tank buster sur ${player}",ja:"${player}にタンクバスター",cn:"死刑 点 ${player}",ko:'"${player}" 탱버'}},n=c(l(a),(e,a,t)=>{const n=d(a);if("tank"===e.role&&n!==e.me)return t.tankSwap()},s(e),(e,a,t)=>{const n=d(a);if("tank"!==e.role||n===e.me)return n===e.me?t.busterOnYou():t.busterOnTarget({player:e.ShortName(n)})});return(e,a,r)=>(r.responseOutputStrings=t,n)},tankCleave:e=>(a,t,n)=>(n.responseOutputStrings={cleaveOnYou:{en:"Tank cleave on YOU",de:"Tank Cleave aud DIR",fr:"Tank cleave sur VOUS",ja:"自分に前方範囲攻撃",cn:"顺劈点名",ko:"나에게 광역 탱버"},cleaveNoTarget:{en:"Tank cleave",de:"Tank Cleave",fr:"Tank cleave",ja:"前方範囲攻撃",cn:"顺劈",ko:"광역 탱버"},avoidCleave:{en:"Avoid tank cleave",de:"Tank Cleave ausweichen",fr:"Évitez le tank cleave",ja:"前方範囲攻撃を避け",cn:"远离顺劈",ko:"광역 탱버 피하기"}},{[o(e)]:(e,a,t)=>{if("tank"===e.role){return d(a)===e.me?t.cleaveOnYou():t.cleaveNoTarget()}return t.avoidCleave()}}),miniBuster:e=>p(o(e),{en:"Mini Buster",de:"Kleiner Tankbuster",fr:"Mini Buster",ja:"ミニバスター",cn:"小死刑",ko:"약한 탱버"}),aoe:e=>p(o(e),{en:"aoe",de:"AoE",fr:"AoE",ja:"AoE",cn:"AoE",ko:"전체 공격"}),bigAoe:e=>p(o(e),{en:"big aoe!",de:"Große AoE!",fr:"Grosse AoE !",ja:"大ダメージAoE",cn:"大AoE伤害！",ko:"강한 전체 공격!"}),spread:e=>p(o(e),{en:"Spread",de:"Verteilen",fr:"Dispersez-vous",ja:"散開",cn:"分散",ko:"산개"}),stackMarker:e=>p(s(e),{en:"Stack",de:"Sammeln",fr:"Packez-vous",ja:"頭割り",cn:"分摊",ko:"쉐어뎀"}),getTogether:e=>p(s(e),{en:"Stack",de:"Sammeln",fr:"Packez-vous",ja:"頭割り",cn:"分摊",ko:"쉐어뎀"}),stackMarkerOn:e=>(a,t,n)=>(n.responseOutputStrings={stackOnYou:{en:"Stack on YOU",de:"Auf DIR sammeln",fr:"Package sur VOUS",ja:"自分にスタック",cn:"集合点名",ko:"쉐어징 대상자"},stackOnTarget:{en:"Stack on ${player}",de:"Auf ${player} sammeln",fr:"Packez-vous sur ${player}",ja:"${player}にスタック",cn:"靠近 ${player}集合",ko:'"${player}" 쉐어징'}},{[s(e)]:(e,a,t)=>{const n=d(a);return n===e.me?t.stackOnYou():t.stackOnTarget({player:e.ShortName(n)})}}),stackMiddle:e=>p(o(e),{en:"Stack in middle",fr:"Packez-vous au milieu",de:"In der Mitte sammeln",ja:"中央でスタック",cn:"中间集合",ko:"중앙에서 모이기"}),doritoStack:e=>p(s(e),{en:"Dorito Stack",de:"Mit Marker sammeln",fr:"Packez les marquages",ja:"マーカー付けた人とスタック",cn:"点名集合",ko:"징끼리 모이기"}),spreadThenStack:e=>p(s(e),{en:"Spread => Stack",de:"Verteilen => Sammeln",fr:"Dispersion => Package",ja:"散開 => スタック",cn:"分散 => 集合",ko:"산개 => 집합"}),stackThenSpread:e=>p(s(e),{en:"Stack => Spread",de:"Sammeln => Verteilen",fr:"Package => Dispersion",ja:"スタック => 散開",cn:"集合 => 分散",ko:"집합 => 산개"}),knockback:e=>p(s(e),{en:"Knockback",de:"Rückstoß",fr:"Poussée",ja:"ノックバック",cn:"击退",ko:"넉백"}),knockbackOn:(e,a)=>{const t={knockbackOnYou:{en:"Knockback on YOU",de:"Rückstoß auf DIR",fr:"Poussée sur VOUS",ja:"自分にノックバック",cn:"击退点名",ko:"넉백징 대상자"},knockbackOnTarget:{en:"Knockback on ${player}",de:"Rückstoß auf ${player}",fr:"Poussée sur ${player}",ja:"${player}にノックバック",cn:"击退点名${player}",ko:'"${player}" 넉백징'}},n=c(o(e),(e,a,t)=>{if(d(a)===e.me)return t.knockbackOnYou()},o(a),(e,a,t)=>{const n=d(a);if(n!==e.me)return t.knockbackOnTarget({player:e.ShortName(n)})});return(e,a,r)=>(r.responseOutputStrings=t,n)},lookTowards:e=>p(o(e),{en:"Look Towards Boss",de:"Anschauen Boss",fr:"Regardez le boss",ja:"見る",cn:"背对",ko:"쳐다보기"}),lookAway:e=>p(o(e),{en:"Look Away",de:"Wegschauen",fr:"Regardez ailleurs",ja:"見ない",cn:"背对",ko:"뒤돌기"}),lookAwayFromTarget:e=>(a,t,n)=>(n.responseOutputStrings={lookAwayFrom:{en:"Look Away from ${name}",de:"Schau weg von ${name}",fr:"Ne regardez pas ${name}",ja:"${name}を見ない",cn:"背对${name}",ko:"${name}에게서 뒤돌기"}},{[s(e)]:(e,a,t)=>{const n=d(a);if(n===e.me)return;const r=m(a.targetId)?e.ShortName(n):n;return t.lookAwayFrom({name:r})}}),lookAwayFromSource:e=>(a,t,n)=>(n.responseOutputStrings={lookAwayFrom:{en:"Look Away from ${name}",de:"Schau weg von ${name}",fr:"Ne regardez pas ${name}",ja:"${name}を見ない",cn:"背对${name}",ko:"${name}에게서 뒤돌기"}},{[s(e)]:(e,a,t)=>{const n=u(a);if(n===e.me)return;const r=m(a.sourceId)?e.ShortName(n):n;return t.lookAwayFrom({name:r})}}),getBehind:e=>p(s(e),{en:"Get Behind",de:"Hinter ihn",fr:"Passez derrière",ja:"背面へ",cn:"去背后",ko:"보스 뒤로"}),goFrontOrSides:e=>p(s(e),{en:"Go Front / Sides",de:"Gehe nach Vorne/ zu den Seiten",fr:"Allez Devant / Côtés",ja:"前／横へ",cn:"去前侧方",ko:"보스 후방 피하기"}),getUnder:e=>p(o(e),{en:"Get Under",de:"Unter ihn",fr:"En dessous",ja:"ボスと貼り付く",cn:"去脚下",ko:"보스 아래로"}),getIn:e=>p(s(e),{en:"In",de:"Rein",fr:"Intérieur",ja:"中へ",cn:"靠近",ko:"안으로"}),getOut:e=>p(s(e),{en:"Out",de:"Raus",ja:"外へ",fr:"Exterieur",cn:"远离",ko:"밖으로"}),outOfMelee:e=>p(o(e),{en:"Out of melee",de:"Raus aus Nahkampf",fr:"Hors de la mêlée",ja:"近接最大レンジ",cn:"近战最远距离回避",ko:"근접범위 밖으로"}),getInThenOut:e=>p(o(e),{en:"In, then out",de:"Rein, dann raus",fr:"Intérieur, puis extérieur",ja:"中 => 外",cn:"先靠近，再远离",ko:"안으로 => 밖으로"}),getOutThenIn:e=>p(o(e),{en:"Out, then in",de:"Raus, dann rein",fr:"Extérieur, puis intérieur",ja:"外 => 中",cn:"先远离，再靠近",ko:"밖으로 => 안으로"}),getBackThenFront:e=>p(o(e),{en:"Back Then Front",de:"Nach Hinten, danach nach Vorne",fr:"Derrière puis devant",ja:"後ろ => 前",cn:"后 => 前",ko:"뒤로 => 앞으로"}),getFrontThenBack:e=>p(o(e),{en:"Front Then Back",de:"Nach Vorne, danach nach Hinten",fr:"Devant puis derrière",ja:"前 => 後ろ",cn:"前 => 后",ko:"앞으로 => 뒤로"}),goMiddle:e=>p(s(e),{en:"go into middle",fr:"Allez au milieu",de:"in die Mitte gehen",ja:"中へ",cn:"去中间",ko:"중앙으로"}),goRight:e=>p(s(e),{en:"Right",de:"Rechts",fr:"Droite ",ja:"右へ",cn:"右",ko:"오른쪽"}),goLeft:e=>p(s(e),{en:"Left",de:"Links",fr:"Gauche",ja:"左へ",cn:"左",ko:"왼쪽"}),goWest:e=>p(s(e),{en:"<= Get Left/West",de:"<= Nach Links/Westen",fr:"<= Allez à Gauche/Ouest",ja:"<= 左/西へ",cn:"<= 去左/西边",ko:"<= 왼쪽으로"}),goEast:e=>p(s(e),{en:"Get Right/East =>",de:"Nach Rechts/Osten =>",fr:"Allez à Droite/Est =>",ja:"右/東へ =>",cn:"去右/东边 =>",ko:"오른쪽으로 =>"}),goFrontBack:e=>p(s(e),{en:"Go Front/Back",de:"Geh nach Vorne/Hinten",fr:"Allez Devant/Derrière",ja:"縦へ",cn:"去前后",ko:"앞/뒤로"}),goSides:e=>p(s(e),{en:"Sides",de:"Seiten",fr:"Côtés",ja:"横へ",ko:"양옆으로",cn:"去侧面"}),killAdds:e=>p(o(e),{en:"Kill adds",de:"Adds besiegen",fr:"Tuez les adds",ja:"雑魚を処理",ko:"쫄 잡기",cn:"击杀小怪"}),killExtraAdd:e=>p(o(e),{en:"Kill Extra Add",de:"Add besiegen",ja:"雑魚を倒す",fr:"Tuez l'add",cn:"击杀小怪",ko:"쫄 잡기"}),awayFromFront:e=>p(s(e),{en:"Away From Front",de:"Weg von Vorne",fr:"Éloignez-vous du devant",ja:"前方から離れ",cn:"远离正面",ko:"보스 전방 피하기"}),sleep:e=>(a,t,n)=>(n.responseOutputStrings={sleep:{en:"Sleep ${name}",de:"Schlaf auf ${name}",fr:"Sommeil sur ${name}",ja:"${name} にスリプル",cn:"催眠 ${name}",ko:"${name} 슬리플"}},{[s(e)]:(e,a,t)=>{const n=u(a);return t.sleep({name:n})}}),stun:e=>(a,t,n)=>(n.responseOutputStrings={stun:{en:"Stun ${name}",de:"Betäubung auf ${name}",fr:"Étourdissement sur ${name}",ja:"${name} にスタン",cn:"眩晕 ${name}",ko:"${name}기절"}},{[s(e)]:(e,a,t)=>{const n=u(a);return t.stun({name:n})}}),interrupt:e=>(a,t,n)=>(n.responseOutputStrings={interrupt:{en:"interrupt ${name}",de:"unterbreche ${name}",fr:"Interrompez ${name}",ja:"${name} に沈黙",cn:"打断${name}",ko:"${name}기술 시전 끊기"}},{[s(e)]:(e,a,t)=>{const n=u(a);return t.interrupt({name:n})}}),preyOn:(e,a)=>{const t={preyOnYou:{en:"Prey on YOU",de:"Marker auf DIR",fr:"Marquage sur VOUS",ja:"自分に捕食",cn:"掠食点名",ko:"홍옥징 대상자"},preyOnTarget:{en:"Prey on ${player}",de:"Marker auf ${player}",fr:"Marquage sur ${player}",ja:"${player}に捕食",cn:"掠食点名${player}",ko:'"${player}" 홍옥징'}},n=c(s(e),(e,a,t)=>{const n=d(a);if(e.me===n)return t.preyOnYou()},o(a),(e,a,t)=>{const n=d(a);if(n!==e.me)return t.preyOnTarget({player:e.ShortName(n)})});return(e,a,r)=>(r.responseOutputStrings=t,n)},awayFrom:e=>(a,t,n)=>(n.responseOutputStrings={awayFromGroup:{en:"Away from Group",de:"Weg von der Gruppe",fr:"Éloignez-vous du groupe",ja:"外へ",cn:"远离人群",ko:"다른 사람들이랑 떨어지기"},awayFromTarget:{en:"Away from ${player}",de:"Weg von ${player}",fr:"Éloignez-vous de ${player}",ja:"${player}から離れ",cn:"远离${player}",ko:'"${player}"에서 멀어지기'}},{[s(e)]:(e,a,t)=>{const n=d(a);return e.me===n?t.awayFromGroup():t.awayFromTarget({player:e.ShortName(n)})}}),meteorOnYou:e=>p(l(e),{en:"Meteor on YOU",de:"Meteor auf DIR",fr:"Météore sur VOUS",ja:"自分にメテオ",cn:"陨石点名",ko:"나에게 메테오징"}),stopMoving:e=>p(l(e),{en:"Stop Moving!",de:"Bewegung stoppen!",fr:"Ne bougez pas !",ja:"移動禁止！",cn:"停止移动！",ko:"이동 멈추기!"}),stopEverything:e=>p(l(e),{en:"Stop Everything!",de:"Stoppe Alles!",fr:"Arrêtez TOUT !",ja:"行動禁止！",cn:"停止行动！",ko:"행동 멈추기!"}),moveAway:e=>p(o(e),{en:"Move!",de:"Bewegen!",fr:"Bougez !",ja:"避けて！",cn:"快躲开！",ko:"이동하기!"}),moveAround:e=>p(o(e),{en:"Move!",de:"Bewegen!",fr:"Bougez !",ja:"動く！",cn:"快动！",ko:"움직이기!"}),breakChains:e=>p(o(e),{en:"Break chains",de:"Kette zerbrechen",fr:"Cassez les chaines",ja:"線を切る",cn:"切断连线",ko:"선 끊기"}),moveChainsTogether:e=>p(o(e),{en:"Move chains together",de:"Ketten zusammen bewegen",fr:"Bougez les chaines ensemble",ja:"線同士一緒に移動",cn:"连线一起移动",ko:"선 붙어서 같이 움직이기"}),earthshaker:e=>(a,t,n)=>(n.responseOutputStrings={earthshaker:{en:"Earth Shaker on YOU",de:"Erdstoß auf DIR",fr:"Marque de terre sur VOUS",ja:"自分にアースシェイカー",cn:"大地摇动点名",ko:"어스징 대상자"}},{[s(e)]:(e,a,t)=>{if(d(a)===e.me)return t.earthshaker()}}),wakeUp:e=>p(l(e),{en:"WAKE UP",de:"AUFWACHEN",fr:"RÉVEILLES-TOI",ja:"目を覚めて！",cn:"醒醒！动一动！！",ko:"강제 퇴장 7분 전"})}},2:function(e,a,t){"use strict";t.d(a,"a",(function(){return n}));class n{static targetIsYou(){return(e,a)=>e.me===a.target}static targetIsNotYou(){return(e,a)=>e.me!==a.target}static caresAboutAOE(){return e=>"tank"===e.role||"healer"===e.role||e.CanAddle()||"BLU"===e.job}static caresAboutMagical(){return e=>"tank"===e.role||"healer"===e.role||e.CanAddle()||"BLU"===e.job}static caresAboutPhysical(){return e=>"tank"===e.role||"healer"===e.role||e.CanFeint()||"BLU"===e.job}}},23:function(e,a,t){"use strict";t(6).a.registerOptions("radar",{options:[{id:"BRankEnabled",name:{en:"B-Rank enabled",de:"B-Rank aktiviert",fr:"Rang-B activé",ja:"ランクBモブ",cn:"开启B怪探测",ko:"B랭크 표시"},type:"checkbox",default:!0},{id:"DetectionRange",name:{en:"Minimum distance to detect mobs (yalms)",de:"Minimum Entfernung um Mobs zu erkennen (in Yalms)",fr:"Distance minimale de détection des mobs (yalms)",ja:"最短探測距離 (ヤルム)",cn:"最短探测距离 (米)",ko:"몬스터를 탐지할 최소 거리 (미터)"},type:"float",default:0},{id:"TTS",name:{en:"Announce new mobs with text to speech",de:"Kündige neue Mobs mit TTS an",fr:"Annoncer les nouveaux mobs via TTS",ja:"沸きモブを探知したらTTSで知らせる",cn:"使用TTS提醒新发现目标",ko:"새 몬스터를 TTS로 알림"},type:"checkbox",default:!1},{id:"PopSoundAlert",name:{en:"Announce new mobs with a sound",de:"Kündige neue Mobs mit einem Sound an",fr:"Annoncer les nouveaux mobs avec un son",ja:"沸きモブを探知したら音声で知らせる",cn:"使用预设提示音提醒新发现目标",ko:"새 몬스터를 소리로 알림"},type:"checkbox",default:!0},{id:"PopVolume",name:{en:"Volume to play pop sound (0-1)",de:"Lautstärke für den Popsound (0-1)",fr:"Volume du son lors d'une apparition (0-1)",ja:"お知らせ音声の音量 (0-1)",cn:"提示音的音量 (0-1)",ko:"소리 크기 (0-1)"},type:"float",default:.5},{id:"Puller",name:{en:"Show puller of mob",de:"Zeige den ersten Angreifer eines Mobs an",fr:"Afficher le puller du mob",ja:"最初にタゲ取った人の名前を表示",cn:"显示目标开怪者的名称",ko:"몬스터를 풀링한 사람 표시"},type:"checkbox",default:!0},{id:"Position",name:{en:"Show position of mob",de:"Zeige die Position eines Mobs",fr:"Afficher la position du mob",ja:"沸きモブの位置を表示",cn:"显示目标位置",ko:"몬스터의 위치 표시"},type:"checkbox",default:!0}]})},3:function(e,a,t){"use strict";a.a={ABloodyReunion:560,ARelicRebornTheChimera:368,ARelicRebornTheHydra:369,ARequiemForHeroes:830,ASleepDisturbed:914,ASpectacleForTheAges:533,AccrueEnmityFromMultipleTargets:540,AirForceOne:832,AkadaemiaAnyder:841,AlaMhigo:689,AlexanderTheArmOfTheFather:444,AlexanderTheArmOfTheFatherSavage:451,AlexanderTheArmOfTheSon:522,AlexanderTheArmOfTheSonSavage:531,AlexanderTheBreathOfTheCreator:581,AlexanderTheBreathOfTheCreatorSavage:585,AlexanderTheBurdenOfTheFather:445,AlexanderTheBurdenOfTheFatherSavage:452,AlexanderTheBurdenOfTheSon:523,AlexanderTheBurdenOfTheSonSavage:532,AlexanderTheCuffOfTheFather:443,AlexanderTheCuffOfTheFatherSavage:450,AlexanderTheCuffOfTheSon:521,AlexanderTheCuffOfTheSonSavage:530,AlexanderTheEyesOfTheCreator:580,AlexanderTheEyesOfTheCreatorSavage:584,AlexanderTheFistOfTheFather:442,AlexanderTheFistOfTheFatherSavage:449,AlexanderTheFistOfTheSon:520,AlexanderTheFistOfTheSonSavage:529,AlexanderTheHeartOfTheCreator:582,AlexanderTheHeartOfTheCreatorSavage:586,AlexanderTheSoulOfTheCreator:583,AlexanderTheSoulOfTheCreatorSavage:587,AllsWellThatEndsInTheWell:220,AllsWellThatStartsWell:796,AlphascapeV10:798,AlphascapeV10Savage:802,AlphascapeV20:799,AlphascapeV20Savage:803,AlphascapeV30:800,AlphascapeV30Savage:804,AlphascapeV40:801,AlphascapeV40Savage:805,Amaurot:838,AmdaporKeep:167,AmdaporKeepHard:189,AmhAraeng:815,AnamnesisAnyder:898,AnnoyTheVoid:222,AsTheHeartBids:894,AssistAlliesInDefeatingATarget:544,Astragalos:729,AvoidAreaOfEffectAttacks:537,AzysLla:402,BaelsarsWall:615,BardamsMettle:623,BasicTrainingEnemyParties:214,BasicTrainingEnemyStrongholds:215,BattleInTheBigKeep:396,BattleOnTheBigBridge:366,BloodOnTheDeck:708,BrayfloxsLongstop:158,BrayfloxsLongstopHard:362,CapeWestwind:332,CastrumAbania:661,CastrumFluminis:778,CastrumMarinum:934,CastrumMarinumDrydocks:967,CastrumMarinumExtreme:935,CastrumMeridianum:217,CentralShroud:148,CentralThanalan:141,ChocoboRaceCostaDelSol:389,ChocoboRaceSagoliiRoad:390,ChocoboRaceTranquilPaths:391,ChocoboRaceTutorial:417,CinderDrift:897,CinderDriftExtreme:912,CoerthasCentralHighlands:155,CoerthasWesternHighlands:397,ComingClean:860,ContainmentBayP1T6:576,ContainmentBayP1T6Extreme:577,ContainmentBayS1T7:517,ContainmentBayS1T7Extreme:524,ContainmentBayZ1T9:637,ContainmentBayZ1T9Extreme:638,CopperbellMines:161,CopperbellMinesHard:349,CuriousGorgeMeetsHisMatch:717,CuttersCry:170,DarkAsTheNightSky:713,DefeatAnOccupiedTarget:545,DeltascapeV10:691,DeltascapeV10Savage:695,DeltascapeV20:692,DeltascapeV20Savage:696,DeltascapeV30:693,DeltascapeV30Savage:697,DeltascapeV40:694,DeltascapeV40Savage:698,DohnMheg:821,DomaCastle:660,DragonSound:714,DunScaith:627,DzemaelDarkhold:171,EastShroud:152,EasternLaNoscea:137,EasternThanalan:145,EdensGateDescent:850,EdensGateDescentSavage:854,EdensGateInundation:851,EdensGateInundationSavage:855,EdensGateResurrection:849,EdensGateResurrectionSavage:853,EdensGateSepulture:852,EdensGateSepultureSavage:856,EdensPromiseAnamorphosis:944,EdensPromiseAnamorphosisSavage:948,EdensPromiseEternity:945,EdensPromiseEternitySavage:949,EdensPromiseLitany:943,EdensPromiseLitanySavage:947,EdensPromiseUmbra:942,EdensPromiseUmbraSavage:946,EdensVerseFulmination:902,EdensVerseFulminationSavage:906,EdensVerseFuror:903,EdensVerseFurorSavage:907,EdensVerseIconoclasm:904,EdensVerseIconoclasmSavage:908,EdensVerseRefulgence:905,EdensVerseRefulgenceSavage:909,Emanation:719,EmanationExtreme:720,EmissaryOfTheDawn:769,EngageMultipleTargets:541,Eulmore:820,ExecuteAComboInBattle:539,ExecuteAComboToIncreaseEnmity:538,ExecuteARangedAttackToIncreaseEnmity:542,FadedMemories:932,FinalExercise:552,FlickingSticksAndTakingNames:219,Foundation:418,FourPlayerMahjongQuickMatchKuitanDisabled:831,Halatali:162,HalataliHard:360,HaukkeManor:166,HaukkeManorHard:350,HealAnAlly:549,HealMultipleAllies:550,HeavenOnHighFloors11_20:771,HeavenOnHighFloors1_10:770,HeavenOnHighFloors21_30:772,HeavenOnHighFloors31_40:782,HeavenOnHighFloors41_50:773,HeavenOnHighFloors51_60:783,HeavenOnHighFloors61_70:774,HeavenOnHighFloors71_80:784,HeavenOnHighFloors81_90:775,HeavenOnHighFloors91_100:785,HellsKier:810,HellsKierExtreme:811,HellsLid:742,HeroOnTheHalfShell:216,HiddenGorge:791,HolminsterSwitch:837,HullbreakerIsle:361,HullbreakerIsleHard:557,Idyllshire:478,IlMheg:816,InThalsName:705,InteractWithTheBattlefield:548,InterdimensionalRift:690,ItsProbablyATrap:665,Kholusia:814,Kugane:628,KuganeCastle:662,KuganeOhashi:806,Lakeland:813,LegendOfTheNotSoHiddenTemple:859,LimsaLominsaLowerDecks:129,LimsaLominsaUpperDecks:128,LongLiveTheQueen:298,LovmMasterTournament:506,LovmPlayerBattleNonRp:591,LovmPlayerBattleRp:589,LovmTournament:590,LowerLaNoscea:135,MalikahsWell:836,MatchAll:null,MatoyasRelict:933,MatsubaMayhem:710,MemoriaMiseraExtreme:913,MessengerOfTheWinds:834,MiddleLaNoscea:134,Mist:136,MorDhona:156,MoreThanAFeeler:221,MtGulg:822,Naadam:688,Neverreap:420,NewGridania:132,NorthShroud:154,NorthernThanalan:147,NyelbertsLament:876,OceanFishing:900,OldGridania:133,OneLifeForOneWorld:592,OnsalHakairDanshigNaadam:888,OurCompromise:716,OurUnsungHeroes:722,OuterLaNoscea:180,PharosSirius:160,PharosSiriusHard:510,PullingPoisonPosies:191,RaisingTheSword:706,ReturnOfTheBull:403,RhalgrsReach:635,SaintMociannesArboretum:511,SaintMociannesArboretumHard:788,Sastasha:157,SastashaHard:387,SealRockSeize:431,ShadowAndClaw:223,ShisuiOfTheVioletTides:616,SigmascapeV10:748,SigmascapeV10Savage:752,SigmascapeV20:749,SigmascapeV20Savage:753,SigmascapeV30:750,SigmascapeV30Savage:754,SigmascapeV40:751,SigmascapeV40Savage:755,Snowcloak:371,SohmAl:441,SohmAlHard:617,SohrKhai:555,SolemnTrinity:300,SouthShroud:153,SouthernThanalan:146,SpecialEventI:353,SpecialEventIi:354,SpecialEventIii:509,StingingBack:192,SyrcusTower:372,TheAery:435,TheAetherochemicalResearchFacility:438,TheAkhAfahAmphitheatreExtreme:378,TheAkhAfahAmphitheatreHard:377,TheAkhAfahAmphitheatreUnreal:930,TheAntitower:516,TheAquapolis:558,TheAurumVale:172,TheAzimSteppe:622,TheBattleOnBekko:711,TheBindingCoilOfBahamutTurn1:241,TheBindingCoilOfBahamutTurn2:242,TheBindingCoilOfBahamutTurn3:243,TheBindingCoilOfBahamutTurn4:244,TheBindingCoilOfBahamutTurn5:245,TheBorderlandRuinsSecure:376,TheBowlOfEmbers:202,TheBowlOfEmbersExtreme:295,TheBowlOfEmbersHard:292,TheBozjaIncident:911,TheBozjanSouthernFront:920,TheBurn:789,TheCalamityRetold:790,TheCarteneauFlatsHeliodrome:633,TheChrysalis:426,TheChurningMists:400,TheCopiedFactory:882,TheCrownOfTheImmaculate:846,TheCrownOfTheImmaculateExtreme:848,TheCrystarium:819,TheDancingPlague:845,TheDancingPlagueExtreme:858,TheDiadem:929,TheDiadem521:901,TheDiademEasy:512,TheDiademHard:515,TheDiademHuntingGrounds:625,TheDiademHuntingGroundsEasy:624,TheDiademTrialsOfTheFury:630,TheDiademTrialsOfTheMatron:656,TheDomanEnclave:759,TheDragonsNeck:142,TheDravanianForelands:398,TheDravanianHinterlands:399,TheDrownedCityOfSkalla:731,TheDungeonsOfLyheGhiah:879,TheDuskVigil:434,TheDyingGasp:847,TheEpicOfAlexanderUltimate:887,TheFaceOfTrueEvil:709,TheFeastCustomMatchCrystalTower:767,TheFeastCustomMatchFeastingGrounds:619,TheFeastCustomMatchLichenweed:646,TheFeastRanked:765,TheFeastTeamRanked:745,TheFeastTraining:766,TheFieldsOfGloryShatter:554,TheFinalCoilOfBahamutTurn1:193,TheFinalCoilOfBahamutTurn2:194,TheFinalCoilOfBahamutTurn3:195,TheFinalCoilOfBahamutTurn4:196,TheFinalStepsOfFaith:559,TheForbiddenLandEurekaAnemos:732,TheForbiddenLandEurekaHydatos:827,TheForbiddenLandEurekaPagos:763,TheForbiddenLandEurekaPyros:795,TheFractalContinuum:430,TheFractalContinuumHard:743,TheFringes:612,TheGhimlytDark:793,TheGrandCosmos:884,TheGreatGubalLibrary:416,TheGreatGubalLibraryHard:578,TheGreatHunt:761,TheGreatHuntExtreme:762,TheGreatShipVylbrand:954,TheHardenedHeart:873,TheHauntedManor:571,TheHeartOfTheProblem:718,TheHeroesGauntlet:916,TheHiddenCanalsOfUznair:725,TheHowlingEye:208,TheHowlingEyeExtreme:297,TheHowlingEyeHard:294,TheHuntersLegacy:875,TheJadeStoa:746,TheJadeStoaExtreme:758,TheKeeperOfTheLake:150,TheLabyrinthOfTheAncients:174,TheLimitlessBlueExtreme:447,TheLimitlessBlueHard:436,TheLochs:621,TheLostAndTheFound:874,TheLostCanalsOfUznair:712,TheLostCityOfAmdapor:363,TheLostCityOfAmdaporHard:519,TheMinstrelsBalladHadessElegy:885,TheMinstrelsBalladNidhoggsRage:566,TheMinstrelsBalladShinryusDomain:730,TheMinstrelsBalladThordansReign:448,TheMinstrelsBalladTsukuyomisPain:779,TheMinstrelsBalladUltimasBane:348,TheNavel:206,TheNavelExtreme:296,TheNavelHard:293,TheNavelUnreal:953,TheOrbonneMonastery:826,TheOrphansAndTheBrokenBlade:715,ThePalaceOfTheDeadFloors101_110:598,ThePalaceOfTheDeadFloors111_120:599,ThePalaceOfTheDeadFloors11_20:562,ThePalaceOfTheDeadFloors121_130:600,ThePalaceOfTheDeadFloors131_140:601,ThePalaceOfTheDeadFloors141_150:602,ThePalaceOfTheDeadFloors151_160:603,ThePalaceOfTheDeadFloors161_170:604,ThePalaceOfTheDeadFloors171_180:605,ThePalaceOfTheDeadFloors181_190:606,ThePalaceOfTheDeadFloors191_200:607,ThePalaceOfTheDeadFloors1_10:561,ThePalaceOfTheDeadFloors21_30:563,ThePalaceOfTheDeadFloors31_40:564,ThePalaceOfTheDeadFloors41_50:565,ThePalaceOfTheDeadFloors51_60:593,ThePalaceOfTheDeadFloors61_70:594,ThePalaceOfTheDeadFloors71_80:595,ThePalaceOfTheDeadFloors81_90:596,ThePalaceOfTheDeadFloors91_100:597,ThePeaks:620,ThePillars:419,ThePoolOfTribute:674,ThePoolOfTributeExtreme:677,ThePraetorium:224,ThePuppetsBunker:917,TheQitanaRavel:823,TheRaktikaGreatwood:817,TheResonant:684,TheRidoranaLighthouse:776,TheRoyalCityOfRabanastre:734,TheRoyalMenagerie:679,TheRubySea:613,TheSeaOfClouds:401,TheSeatOfSacrifice:922,TheSeatOfSacrificeExtreme:923,TheSecondCoilOfBahamutSavageTurn1:380,TheSecondCoilOfBahamutSavageTurn2:381,TheSecondCoilOfBahamutSavageTurn3:382,TheSecondCoilOfBahamutSavageTurn4:383,TheSecondCoilOfBahamutTurn1:355,TheSecondCoilOfBahamutTurn2:356,TheSecondCoilOfBahamutTurn3:357,TheSecondCoilOfBahamutTurn4:358,TheShiftingAltarsOfUznair:794,TheShiftingOubliettesOfLyheGhiah:924,TheSingularityReactor:437,TheSirensongSea:626,TheStepsOfFaith:143,TheStoneVigil:168,TheStoneVigilHard:365,TheStrikingTreeExtreme:375,TheStrikingTreeHard:374,TheSunkenTempleOfQarn:163,TheSunkenTempleOfQarnHard:367,TheSwallowsCompass:768,TheTamTaraDeepcroft:164,TheTamTaraDeepcroftHard:373,TheTempest:818,TheTempleOfTheFist:663,TheThousandMawsOfTotoRak:169,TheTripleTriadBattlehall:579,TheTwinning:840,TheUnendingCoilOfBahamutUltimate:733,TheValentionesCeremony:741,TheVault:421,TheVoidArk:508,TheWanderersPalace:159,TheWanderersPalaceHard:188,TheWeaponsRefrainUltimate:777,TheWeepingCityOfMhach:556,TheWhorleaterExtreme:359,TheWhorleaterHard:281,TheWillOfTheMoon:797,TheWorldOfDarkness:151,TheWreathOfSnakes:824,TheWreathOfSnakesExtreme:825,ThokAstThokExtreme:446,ThokAstThokHard:432,ThornmarchExtreme:364,ThornmarchHard:207,TripleTriadInvitationalParlor:941,TripleTriadOpenTournament:940,UldahStepsOfNald:130,UldahStepsOfThal:131,UnderTheArmor:190,UpperLaNoscea:139,UrthsFount:394,VowsOfVirtueDeedsOfCruelty:893,WardUp:299,WesternLaNoscea:138,WesternThanalan:140,WhenClansCollide:723,WithHeartAndSteel:707,WolvesDenPier:250,Xelphatol:572,Yanxia:614}},39:function(e,a,t){"use strict";t.r(a);var n={Agathos:{id:"4369",name:{cn:"阿伽托斯",de:"Agathos",en:"Agathos",fr:"Agathos",ja:"アガトス",ko:"아가토스"},rank:"A"},Aglaope:{id:"8653",name:{cn:"阿格拉俄珀",de:"Aglaope",en:"Aglaope",fr:"Aglaope",ja:"アグラオペ",ko:"아글라오페"},rank:"S"},"Agrippa the Mighty":{id:"2969",name:{cn:"阿格里帕",de:"Agrippa",en:"Agrippa the Mighty",fr:"Agrippa",ja:"アグリッパ",ko:"아그리파"},rank:"S"},"Albin the Ashen":{id:"2926",name:{cn:"死灰复燃的阿尔宾",de:"Albin Aschfahl",en:"Albin the Ashen",fr:"Albin le blafard",ja:"死灰のアルビン",ko:"잿빛낯 알빈"},rank:"B"},Alectryon:{id:"2940",name:{cn:"阿列刻特利昂",de:"Alectryon",en:"Alectryon",fr:"Alectryon",ja:"アレクトリオン",ko:"알렉트리온"},rank:"A"},Alteci:{id:"4350",name:{cn:"阿尔提克",de:"Artic",en:"Alteci",fr:"Altek",ja:"アルティック",ko:"알티크"},rank:"B"},Angada:{id:"5999",name:{cn:"安迦达",de:"Angada",en:"Angada",fr:"Angada",ja:"アンガダ",ko:"앙가다"},rank:"A"},Aqrabuamelu:{id:"5993",name:{cn:"熔骨炎蝎",de:"Aqrabuamelu",en:"Aqrabuamelu",fr:"Aqrabuamelu",ja:"アクラブアメル",ko:"아크라부아멜루"},rank:"A"},Aswang:{id:"6007",name:{cn:"阿苏黄",de:"Aswang",en:"Aswang",fr:"Aswang",ja:"アスワング",ko:"아스왕"},rank:"B"},Baal:{id:"8897",name:{cn:"巴力",de:"Baal",en:"Baal",fr:"Baal",ja:"バール",ko:"바알"},rank:"A"},Barbastelle:{id:"2929",name:{cn:"宽耳凶蝠",de:"Barbastelle",en:"Barbastelle",fr:"Barbastelle",ja:"バーバステル",ko:"바바스텔"},rank:"B"},"Bird of Paradise":{id:"4378",name:{cn:"极乐鸟",de:"Paradiesvogel",en:"Bird of Paradise",fr:"oiseau de Paradis",ja:"極楽鳥",ko:"극락조"},rank:"S"},"Bloody Mary":{id:"2930",name:{cn:"血腥玛丽",de:"Bloody Mary",en:"Bloody Mary",fr:"Mary la sanglante",ja:"ブラッディ・マリー",ko:"핏빛 메리"},rank:"B"},"Bone Crawler":{id:"5988",name:{cn:"爬骨怪龙",de:"Knochenkriecher",en:"Bone Crawler",fr:"Mangeur d'os",ja:"ボーンクローラー",ko:"해골거미"},rank:"S"},Bonnacon:{id:"2965",name:{cn:"火愤牛",de:"Bonnacon",en:"Bonnacon",fr:"Bonnacon",ja:"ボナコン",ko:"보나콘"},rank:"S"},Brontes:{id:"2958",name:{cn:"布隆特斯",de:"Brontes",en:"Brontes",fr:"Brontes",ja:"ブロンテス",ko:"브론테스"},rank:"S"},Buccaboo:{id:"6011",name:{cn:"布卡卜",de:"Buccaboo",en:"Buccaboo",fr:"Bucca-boo",ja:"ブッカブー",ko:"부카부"},rank:"B"},Bune:{id:"4368",name:{cn:"布涅",de:"Bune",en:"Bune",fr:"Bune",ja:"ブネ",ko:"부네"},rank:"A"},Campacti:{id:"4372",name:{cn:"坎帕提",de:"Campacti",en:"Campacti",fr:"Campacti",ja:"キャムパクティ",ko:"캠파크티"},rank:"A"},Chernobog:{id:"2967",name:{cn:"牛头黑神",de:"Czernobog",en:"Chernobog",fr:"Czernobog",ja:"チェルノボーグ",ko:"체르노보그"},rank:"S"},Coquecigrue:{id:"8913",name:{cn:"三合鸟儿",de:"Coquecigrue",en:"Coquecigrue",fr:"Coquecigrue",ja:"コクシグルー",ko:"콕시그뤼"},rank:"B"},Cornu:{id:"2950",name:{cn:"角祖",de:"Cornu",en:"Cornu",fr:"Cornu",ja:"コンヌ",ko:"콘누"},rank:"A"},Croakadile:{id:"2963",name:{cn:"咕尔呱洛斯",de:"Quakquak",en:"Croakadile",fr:"Croabéros",ja:"ケロゲロス",ko:"개굴개로스"},rank:"S"},"Croque-mitaine":{id:"2962",name:{cn:"护土精灵",de:"Croque Mitaine",en:"Croque-mitaine",fr:"Croque-mitaine",ja:"クロック・ミテーヌ",ko:"크로크 미테느"},rank:"S"},"Dalvag's Final Flame":{id:"2944",name:{cn:"菲兰德的遗火",de:["Letzte Flamme Dalvags","Letzter Flamme Dalvags","Letztes Flamme Dalvags"],en:"Dalvag's Final Flame",fr:"dernière flamme de Dalvag",ja:"ファイナルフレイム",ko:"마지막 투혼"},rank:"A"},"Dark Helmet":{id:"2931",name:{cn:"暗盔魔蟹",de:"Dunkelhelm",en:"Dark Helmet",fr:"Casque noir",ja:"ダークヘルメット",ko:"검은 투구게"},rank:"B"},Deacon:{id:"8899",name:{cn:"助祭大蟹",de:"Diakon",en:"Deacon",fr:"Diacre",ja:"ディーコン",ko:"부사제게"},rank:"B"},Deidar:{id:"6004",name:{cn:"大太",de:"Deidar",en:"Deidar",fr:"Deidar",ja:"デイダラ",ko:"데이다라"},rank:"B"},Domovoi:{id:"8656",name:{cn:"杜莫伊",de:"Domovoi",en:"Domovoi",fr:"Domovoï",ja:"ドモヴォーイ",ko:"도모보이"},rank:"B"},Enkelados:{id:"4370",name:{cn:"恩克拉多斯",de:"Engedoras",en:"Enkelados",fr:"Enkélados",ja:"エンケドラス",ko:"엔켈라도스"},rank:"A"},Erle:{id:"5991",name:{cn:"女王蜂",de:"Erle",en:"Erle",fr:"Erle",ja:"アール",ko:"얼"},rank:"A"},"Flame Sergeant Dalvag":{id:"2927",name:{cn:"永恒不灭的菲兰德副耀士",de:"Dalvag",en:"Flame Sergeant Dalvag",fr:"sergent-major Dalvag",ja:"不滅のフェランド闘軍曹",ko:"불멸의 중사 페란드"},rank:"B"},Forneus:{id:"2936",name:{cn:"弗内乌斯",de:"Forneus",en:"Forneus",fr:"Forneus",ja:"ファルネウス",ko:"포르네우스"},rank:"A"},"Funa Yurei":{id:"5996",name:{cn:"船幽灵",de:"Funa Yurei",en:"Funa Yurei",fr:"Funa Yurei",ja:"船幽霊",ko:"선박 유령"},rank:"A"},Gajasura:{id:"5998",name:{cn:"象魔修罗",de:"Gajasura",en:"Gajasura",fr:"Gajasura",ja:"ガジャースラ",ko:"가자수라"},rank:"A"},Gamma:{id:"5985",name:{cn:"伽马",de:"Gamma",en:"Gamma",fr:"Gamma",ja:"ガンマ",ko:"감마"},rank:"S"},Gandarewa:{id:"4377",name:{cn:"刚德瑞瓦",de:"Gandalva",en:"Gandarewa",fr:"Gandharva",ja:"ガンダルヴァ",ko:"간다르바"},rank:"S"},Gatling:{id:"2925",name:{cn:"加特林针鼹",de:"Gatling",en:"Gatling",fr:"Acanthor",ja:"ガトリングス",ko:"개틀링"},rank:"B"},"Gauki Strongblade":{id:"6002",name:{cn:"剑豪 刑具",de:"Gauki Starkklinge",en:"Gauki Strongblade",fr:"Gauki la Lame forte",ja:"剣豪ガウキ",ko:"검호 가우키"},rank:"B"},"Ghede Ti Malice":{id:"2938",name:{cn:"盖得",de:"Ghede Titus Häme",en:"Ghede Ti Malice",fr:"Guédé Ti-Malice",ja:"ゲーデ",ko:"게데"},rank:"A"},"Gilshs Aath Swiftclaw":{id:"8898",name:{cn:"徒手抓鱼 基乌嘶·渊斯",de:"Gilshs Aath",en:"Gilshs Aath Swiftclaw",fr:"Gilshs Aath l'étrangleur",ja:"手掴のギウスィー・アース",ko:"맨손의 기우쉬 아스"},rank:"B"},Girimekhala:{id:"6000",name:{cn:"基里麦卡拉",de:"Girimekhala",en:"Girimekhala",fr:"Girimekhala",ja:"ギリメカラ",ko:"기리메칼라"},rank:"A"},Girtab:{id:"2939",name:{cn:"尾宿蛛蝎",de:"Girtab",en:"Girtab",fr:"Girtab",ja:"ギルタブ",ko:"기르타브"},rank:"A"},"Gnath cometdrone":{id:"4352",name:{cn:"骨颌彗星兵",de:"Gnath-Kometdrohne",en:"Gnath cometdrone",fr:"Gnathe myrmicomète",ja:"グナース・コメットドローン",ko:"그나스 혜성요격자"},rank:"B"},Grassman:{id:"8892",name:{cn:"格拉斯曼",de:"Grasmann",en:"Grassman",fr:"Sasquatch arboricole",ja:"グラスマン",ko:"숲원인"},rank:"A"},"Guhuo Niao":{id:"6003",name:{cn:"姑获鸟",de:"Guhuo Niao",en:"Guhuo Niao",fr:"Guhuo Niao",ja:"姑獲鳥",ko:"우부메"},rank:"B"},Gunitt:{id:"8895",name:{cn:"顾尼图",de:"Gunitt",en:"Gunitt",fr:"Gunitt",ja:"グニット",ko:"구니트"},rank:"S"},"Gwas-y-neidr":{id:"6010",name:{cn:"蛇仆蚂蜓",de:"Gwas-y-neidr",en:"Gwas-y-neidr",fr:"Gwas-y-neidr",ja:"グアス・ア・ニードル",ko:"독사의 종복"},rank:"B"},"Gyorai Quickstrike":{id:"6005",name:{cn:"闪雷击 鱼雷",de:"Gyorai Schnellschlag",en:"Gyorai Quickstrike",fr:"Gyorai le Vif",ja:"雷撃のギョライ",ko:"뇌격의 교라이"},rank:"B"},Hellsclaw:{id:"2947",name:{cn:"魔导地狱爪",de:"Höllenklaue",en:"Hellsclaw",fr:"griffe des enfers magitek",ja:"魔導ヘルズクロー",ko:"마도 지옥손아귀"},rank:"A"},Huracan:{id:"8912",name:{cn:"乌拉坎",de:"Huracan",en:"Huracan",fr:"Huracan",ja:"フラカン",ko:"후라칸"},rank:"A"},Indomitable:{id:"8914",name:{cn:"不屈号",de:"Unbezähmbar",en:"Indomitable",fr:"Indomptable",ja:"インドミタブル",ko:"깡다구"},rank:"B"},Itzpapalotl:{id:"8909",name:{cn:"伊兹帕帕洛特尔",de:"Itzpapalotl",en:"Itzpapalotl",fr:"Itzpapalotl",ja:"イツパパロツル",ko:"이츠파팔로틀"},rank:"B"},Ixtab:{id:"8890",name:{cn:"伊休妲",de:"Ixtab",en:"Ixtab",fr:"Ixtab",ja:"イシュタム",ko:"이쉬타브"},rank:"S"},"Juggler Hecatomb":{id:"8904",name:{cn:"残虐杂技师",de:"Gaukler Hecatomb",en:"Juggler Hecatomb",fr:"Jongleur hécatombe",ja:"ジャグラー・ヘカトゥーム",ko:"학살 곡예마"},rank:"B"},Kiwa:{id:"6013",name:{cn:"奇洼",de:"Kiwa",en:"Kiwa",fr:"Kiwa",ja:"キワ",ko:"키와"},rank:"B"},Kreutzet:{id:"4351",name:{cn:"克鲁泽",de:"Kreutzet",en:"Kreutzet",fr:"Kreutzet",ja:"クルーゼ",ko:"크루제"},rank:"B"},Kurma:{id:"6006",name:{cn:"俱利摩",de:"Kurma",en:"Kurma",fr:"Kurma",ja:"クールマ",ko:"쿠르마"},rank:"B"},Kurrea:{id:"2952",name:{cn:"库雷亚",de:"Kurrea",en:"Kurrea",fr:"Kurrea",ja:"クーレア",ko:"쿠레아"},rank:"A"},"La Velue":{id:"8908",name:{cn:"浓毛兽",de:"La Velue",en:"La Velue",fr:"Velue",ja:"ラ・ヴェリュ",ko:"털보오소리"},rank:"B"},Laideronnette:{id:"2953",name:{cn:"雷德罗巨蛇",de:"Laideronette",en:"Laideronnette",fr:"Laideronnette",ja:"レドロネット",ko:"레드로네트"},rank:"S"},Lampalagua:{id:"2959",name:{cn:"巴拉乌尔",de:"Balaur",en:"Lampalagua",fr:"Balaur",ja:"バルウール",ko:"발라우르"},rank:"S"},"Leech King":{id:"2935",name:{cn:"水蛭王",de:"Egelkönig",en:"Leech King",fr:"roi des sangsues",ja:"リーチキング",ko:"대왕거머리"},rank:"B"},Leucrotta:{id:"4380",name:{cn:"卢克洛塔",de:"Leucrotta",en:"Leucrotta",fr:"leucrotta",ja:"レウクロッタ",ko:"레우크로타"},rank:"S"},"Li'l Murderer":{id:"8911",name:{cn:"小小杀手",de:["Kleine Mörder","Kleiner Mörder","Kleines Mörder"],en:"Li'l Murderer",fr:"Traître",ja:"リルマーダー",ko:"작은 살인자"},rank:"A"},"Lord of the Wyverns":{id:"4365",name:{cn:"双足飞龙之王",de:"Wyvern-Lord",en:"Lord of the Wyverns",fr:"seigneur des wyvernes",ja:"ワイバーンロード",ko:"와이번 로드"},rank:"A"},Luminare:{id:"5995",name:{cn:"泛光晶体",de:"Luminare",en:"Luminare",fr:"Luminare",ja:"ルミナーレ",ko:"루미나레"},rank:"A"},Lycidas:{id:"4360",name:{cn:"利西达斯",de:"Lykidas",en:"Lycidas",fr:"Lycidas",ja:"リュキダス",ko:"류키다스"},rank:"B"},Lyuba:{id:"4363",name:{cn:"卢芭",de:"Lyuba",en:"Lyuba",fr:"Lyuba",ja:"リューバ",ko:"류바"},rank:"A"},Maahes:{id:"2942",name:{cn:"玛赫斯",de:"Maahes",en:"Maahes",fr:"Maahes",ja:"マヘス",ko:"마헤스"},rank:"A"},Mahisha:{id:"5994",name:{cn:"马希沙",de:"Mahisha",en:"Mahisha",fr:"Mahisha",ja:"マヒシャ",ko:"마히샤"},rank:"A"},Maliktender:{id:"8901",name:{cn:"马利克巨人掌",de:"Malikkaktor",en:"Maliktender",fr:"Malikpampa",ja:"マリクテンダー",ko:"말리크텐더"},rank:"A"},Manes:{id:"6012",name:{cn:"玛涅斯",de:"Manes",en:"Manes",fr:"Manes",ja:"マネス",ko:"마네스"},rank:"B"},Marberry:{id:"2949",name:{cn:"玛贝利",de:"Marberry",en:"Marberry",fr:"marberry",ja:"マーベリー",ko:"마베리"},rank:"A"},Marraco:{id:"2951",name:{cn:"马拉克",de:"Marraco",en:"Marraco",fr:"Marraco",ja:"マラク",ko:"머라쿠"},rank:"A"},Melt:{id:"2937",name:{cn:"千眼凝胶",de:"Schmelze",en:"Melt",fr:"Fondu",ja:"メルティゼリー",ko:"녹아내리는 젤리"},rank:"A"},Mindmaker:{id:"8893",name:{cn:"启灵果",de:"Freigeist",en:"Mindmaker",fr:"Maître-penseur",ja:"マインドメーカー",ko:"지능계발자"},rank:"B"},Minhocao:{id:"2961",name:{cn:"蚓螈巨虫",de:"Minhocao",en:"Minhocao",fr:"Minhocao",ja:"ミニョーカオン",ko:"미뇨카온"},rank:"S"},Mirka:{id:"4362",name:{cn:"米勒卡",de:"Mirka",en:"Mirka",fr:"Mirka",ja:"ミルカ",ko:"미르카"},rank:"A"},"Monarch Ogrefly":{id:"2921",name:{cn:"君王鬼蜻蜓",de:"Monarch Ogerlibelle",en:"Monarch Ogrefly",fr:"agrion ogre monarque",ja:"モナーク・オーガフライ",ko:"제왕잠자리"},rank:"B"},Myradrosh:{id:"2932",name:{cn:"米腊德罗斯蜂鸟",de:"Myradrosh",en:"Myradrosh",fr:"Myradrosh",ja:"ミラドロッシュ",ko:"미라드로시"},rank:"B"},Nahn:{id:"2948",name:{cn:"纳恩",de:"Nahn",en:"Nahn",fr:"Nahn",ja:"ナン",ko:"난"},rank:"A"},Nandi:{id:"2966",name:{cn:"南迪",de:"Nandi",en:"Nandi",fr:"Nandi",ja:"ナンディ",ko:"난디"},rank:"S"},Nariphon:{id:"8907",name:{cn:"纳里蓬",de:"Nariphon",en:"Nariphon",fr:"Nariphon",ja:"ナリーポン",ko:"나리폰"},rank:"A"},Naul:{id:"2934",name:{cn:"纳乌尔",de:"Naul",en:"Naul",fr:"Naul",ja:"ナウル",ko:"나울"},rank:"B"},Nuckelavee:{id:"8906",name:{cn:"纳克拉维",de:"Nuckelavee",en:"Nuckelavee",fr:"Nuckelavee",ja:"ナックラヴィー",ko:"너클라비"},rank:"A"},Nunyunuwi:{id:"2960",name:{cn:"努纽努维",de:"Nunyunuwi",en:"Nunyunuwi",fr:"Nunyunuwi",ja:"ヌニュヌウィ",ko:"느뉴느위"},rank:"S"},"O Poorest Pauldia":{id:"8655",name:{cn:"保尔迪雅",de:["gepeinigte Pauldia","gepeinigter Pauldia","gepeinigtes Pauldia"],en:"O Poorest Pauldia",fr:"Pauldia",ja:"ポールディア",ko:"폴디아"},rank:"A"},Okina:{id:"5984",name:{cn:"巨大鳐",de:"Okina",en:"Okina",fr:"Okina",ja:"オキナ",ko:"오키나"},rank:"S"},Omni:{id:"4361",name:{cn:"全能机甲",de:"Omni",en:"Omni",fr:"Omni",ja:"オムニ",ko:"옴니"},rank:"B"},"Oni Yumemi":{id:"5997",name:{cn:"鬼观梦",de:"Oni Yumemi",en:"Oni Yumemi",fr:"Oni Yumemi",ja:"オニユメミ",ko:"귀신 꿈고둥"},rank:"A"},Orcus:{id:"5990",name:{cn:"奥迦斯",de:"Orcus",en:"Orcus",fr:"Orcus",ja:"オルクス",ko:"오르쿠스"},rank:"A"},Orghana:{id:"5986",name:{cn:"兀鲁忽乃朝鲁",de:"Orghana",en:"Orghana",fr:"Orghana",ja:"オルガナ",ko:"오르가나"},rank:"S"},Ouzelum:{id:"6009",name:{cn:"奥祖鲁姆",de:"Ouzelum",en:"Ouzelum",fr:"Ouzelum",ja:"オゼルム",ko:"오젤룸"},rank:"B"},Ovjang:{id:"2924",name:{cn:"奥弗杰恩",de:"Ovjang",en:"Ovjang",fr:"Ovjang",ja:"アヴゼン",ko:"아브젱"},rank:"B"},Pachamama:{id:"8894",name:{cn:"帕查玛玛",de:"Pachamama",en:"Pachamama",fr:"Pachamama",ja:"パチャママ",ko:"파차마마"},rank:"B"},Phecda:{id:"2922",name:{cn:"天玑巨熊",de:"Phecda",en:"Phecda",fr:"Phecda",ja:"フェクダ",ko:"페크다"},rank:"B"},Pterygotus:{id:"4354",name:{cn:"翼肢鲎",de:"Pterygotus",en:"Pterygotus",fr:"Pterygotus",ja:"プテリゴトゥス",ko:"프테리고투스"},rank:"B"},Pylraster:{id:"4364",name:{cn:"派拉斯特暴龙",de:"Xhauron",en:"Pylraster",fr:"Pirlasta",ja:"パイルラスタ",ko:"파일라스터"},rank:"A"},Rusalka:{id:"8896",name:{cn:"卢莎卡",de:"Rusalka",en:"Rusalka",fr:"Roussalka",ja:"ルサルカ",ko:"루살카"},rank:"A"},"Sabotender Bailarina":{id:"2941",name:{cn:"花舞仙人刺",de:"Sabotender Bailarina",en:"Sabotender Bailarina",fr:"pampa ballerine",ja:"サボテンダー・バイラリーナ",ko:"사보텐더 무희"},rank:"A"},Safat:{id:"2968",name:{cn:"萨法特",de:"Safat",en:"Safat",fr:"Safat",ja:"サファト",ko:"사파트"},rank:"S"},"Salt and Light":{id:"5989",name:{cn:"盐和光",de:"Salzlicht",en:"Salt and Light",fr:"Salaclux",ja:"ソルト・アンド・ライト",ko:"빛과 소금"},rank:"S"},"Sanu Vali of Dancing Wings":{id:"4359",name:{cn:"飞舞翼 萨努瓦力",de:["Sanu Vali der Tanzende Schwinge","Sanu Vali der Tanzender Schwinge","Sanu Vali der Tanzendes Schwinge","Sanu Vali die Tanzende Schwinge","Sanu Vali die Tanzender Schwinge","Sanu Vali die Tanzendes Schwinge","Sanu Vali das Tanzende Schwinge","Sanu Vali das Tanzender Schwinge","Sanu Vali das Tanzendes Schwinge"],en:"Sanu Vali of Dancing Wings",fr:"Sanu Vali",ja:"舞手のサヌバリ",ko:"무용수 사누발리"},rank:"B"},Scitalis:{id:"4356",name:{cn:"斯奇塔利斯",de:"Scitalis",en:"Scitalis",fr:"Scitalis",ja:"スキタリス",ko:"스키탈리스"},rank:"B"},Senmurv:{id:"4375",name:{cn:"神穆尔鸟",de:"Simurgh",en:"Senmurv",fr:"Sênmurw",ja:"セーンムルウ",ko:"센무르"},rank:"S"},"Sewer Syrup":{id:"2923",name:{cn:"阴沟毒液",de:"Abwasser-Sirup",en:"Sewer Syrup",fr:"Syrop d'égout",ja:"スェアーシロップ",ko:"하수도 시럽"},rank:"B"},"Shadow-dweller Yamini":{id:"6008",name:{cn:"影中暗 雅弥尼",de:"Schattenkauer-Yamini",en:"Shadow-dweller Yamini",fr:"Yamini la Nocturne",ja:"宵闇のヤミニ",ko:"땅거미의 야미니"},rank:"B"},Sisiutl:{id:"4371",name:{cn:"西斯尤",de:"Sisiutl",en:"Sisiutl",fr:"Sisiutl",ja:"シシウトゥル",ko:"시시우틀"},rank:"A"},"Skogs Fru":{id:"2928",name:{cn:"花林女郎",de:"Skogs Fru",en:"Skogs Fru",fr:"Skogs Fru",ja:"スコッグ・フリュー",ko:"스콕스프루"},rank:"B"},"Slipkinx Steeljoints":{id:"4366",name:{cn:"机工兵 斯利普金克斯",de:"Rutschfix Stahlscharnier",en:"Slipkinx Steeljoints",fr:"Slipkinx Joints-d'acier",ja:"機兵のスリップキンクス",ko:"기계병정 슬립킨크스"},rank:"A"},Squonk:{id:"4358",name:{cn:"斯奎克",de:"Squonk",en:"Squonk",fr:"Squonk",ja:"スクオンク",ko:"스퀑크"},rank:"B"},"Stinging Sophie":{id:"2920",name:{cn:"击刺魔蜂索菲",de:["Stinkige Sophie","Stinkiger Sophie","Stinkiges Sophie"],en:"Stinging Sophie",fr:"Sophie la dardante",ja:"スティンギング・ソフィー",ko:"따끔한 소피"},rank:"B"},Stolas:{id:"4367",name:{cn:"斯特拉斯",de:"Stolas",en:"Stolas",fr:"Stolas",ja:"ストラス",ko:"스톨라스"},rank:"A"},Sugaar:{id:"8902",name:{cn:"休格尔",de:"Sugaar",en:"Sugaar",fr:"Sugaar",ja:"シュガール",ko:"슈가르"},rank:"A"},Sum:{id:"6001",name:{cn:"硕姆",de:"Sum",en:"Sum",fr:"Sum",ja:"ソム",ko:"솜"},rank:"A"},Supay:{id:"8891",name:{cn:"苏帕伊",de:"Supay",en:"Supay",fr:"Supay",ja:"スペイ",ko:"수파이"},rank:"A"},Tarchia:{id:"8900",name:{cn:"多智兽",de:"Tarchia",en:"Tarchia",fr:"Tarchia",ja:"タルキア",ko:"타르키아"},rank:"S"},Thextera:{id:"4353",name:{cn:"提克斯塔",de:"Dexter",en:"Thextera",fr:"Texta",ja:"テクスタ",ko:"텍스타"},rank:"B"},"Thousand-cast Theda":{id:"2956",name:{cn:"千竿口花希达",de:"Tausendzahn Theda",en:"Thousand-cast Theda",fr:"Theda la tripoteuse",ja:"サウザンドキャスト・セダ",ko:"천갈래덩굴 세다"},rank:"S"},Tyger:{id:"8905",name:{cn:"戾虫",de:"Tyger",en:"Tyger",fr:"Tygre",ja:"ティガー",ko:"티거"},rank:"S"},Udumbara:{id:"5987",name:{cn:"优昙婆罗花",de:"Udumbara",en:"Udumbara",fr:"Udumbara",ja:"ウドンゲ",ko:"우담바라"},rank:"S"},Unktehi:{id:"2946",name:{cn:"乌克提希",de:"Unktehi",en:"Unktehi",fr:"Unktehi",ja:"ウンクテヒ",ko:"웅크테히"},rank:"A"},Vochstein:{id:"5992",name:{cn:"弗克施泰因",de:"Vochstein",en:"Vochstein",fr:"Vochstein",ja:"バックスタイン",ko:"보크스타인"},rank:"A"},"Vogaal Ja":{id:"2945",name:{cn:"丑男子 沃迦加",de:"Vogaal Ja",en:"Vogaal Ja",fr:"Vogaal Ja",ja:"醜男のヴォガージャ",ko:"못생긴 보가쟈"},rank:"A"},Vulpangue:{id:"8657",name:{cn:"狐首虺",de:"Vulpangue",en:"Vulpangue",fr:"Vulpangue",ja:"ヴルパングエ",ko:"불팡구에"},rank:"B"},Vuokho:{id:"2933",name:{cn:"巫刻猎鹫",de:"Vuokho",en:"Vuokho",fr:"Vuokho",ja:"ヴオコー",ko:"부오코"},rank:"B"},"White Joker":{id:"2919",name:{cn:"白鬼鼠王",de:["Weiße Joker","Weißer Joker","Weißes Joker"],en:"White Joker",fr:"joker blanc",ja:"ホワイトジョーカー",ko:"흰재간둥이"},rank:"B"},"Worm of the Well":{id:"8903",name:{cn:"大井巨虫",de:"Wurm des Brunnens",en:"Worm of the Well",fr:"Verpuy",ja:"ウェルウォーム",ko:"우물지렁이"},rank:"B"},Wulgaru:{id:"2954",name:{cn:"乌尔伽鲁",de:"Wulgaru",en:"Wulgaru",fr:"Wulgaru",ja:"ウルガル",ko:"울가루"},rank:"S"},"Zanig'oh":{id:"2943",name:{cn:"札尼戈",de:"Zanig'oh",en:"Zanig'oh",fr:"Zanig'oh",ja:"ザニゴ",ko:"자니고"},rank:"A"},"Zona Seeker":{id:"2957",name:{cn:"虚无探索者",de:"Zona Sucher",en:"Zona Seeker",fr:"Zona Seeker",ja:"ゾーナ・シーカー",ko:"조나 시커"},rank:"S"},"false gigantopithecus":{id:"4355",name:{cn:"布拉巨猿",de:"Gigantopithecus",en:"false gigantopithecus",fr:"gigantopithèque",ja:"ブラクキ",ko:"기간토피테쿠스"},rank:"B"},"forgiven gossip":{id:"8916",name:{cn:"得到宽恕的流言",de:["geläuterte Lästerei","geläuterter Lästerei","geläutertes Lästerei"],en:"forgiven gossip",fr:"médisance pardonnée",ja:"フォーギヴン・ゴシップ",ko:"면죄된 험담"},rank:"SS-"},"forgiven pedantry":{id:"8910",name:{cn:"得到宽恕的炫学",de:["geläuterte Pedanterie","geläuterter Pedanterie","geläutertes Pedanterie"],en:"forgiven pedantry",fr:"pédanterie pardonnée",ja:"フォーギヴン・ペダントリー",ko:"면죄된 현학"},rank:"S"},"forgiven rebellion":{id:"8915",name:{cn:"得到宽恕的叛乱",de:["geläuterte Rebellion","geläuterter Rebellion","geläutertes Rebellion"],en:"forgiven rebellion",fr:"rébellion pardonnée",ja:"フォーギヴン・リベリオン",ko:"면죄된 폭동"},rank:"SS+"},"kaiser behemoth":{id:"4374",name:{cn:"凯撒贝希摩斯",de:"Kaiser-Behemoth",en:"kaiser behemoth",fr:"béhémoth empereur",ja:"カイザーベヒーモス",ko:"카이저 베히모스"},rank:"S"},mindflayer:{id:"2955",name:{cn:"夺心魔",de:"Seelenbrenner",en:"mindflayer",fr:"flagelleur mental",ja:"マインドフレア",ko:"정신지배자"},rank:"S"},"stench blossom":{id:"4373",name:{cn:"恶臭狂花",de:"Pestwurz",en:"stench blossom",fr:"fleur nauséabonde",ja:"センチブロッサム",ko:"악취화"},rank:"A"},"the Garlok":{id:"2964",name:{cn:"伽洛克",de:"Garlok",en:"the Garlok",fr:"Garlok",ja:"ガーロック",ko:"갈록"},rank:"S"},"the Pale Rider":{id:"4376",name:{cn:"苍白骑士",de:["Bleiche Reiter","Bleicher Reiter","Bleiches Reiter"],en:"the Pale Rider",fr:"Cavalier pâle",ja:"ペイルライダー",ko:"창백의 기수"},rank:"S"},"the Scarecrow":{id:"4357",name:{cn:"惊慌稻草龙",de:"Tyranno",en:"the Scarecrow",fr:"dracosaure primus",ja:"スケアクロウ",ko:"허수아비전갈"},rank:"B"},"the mudman":{id:"8654",name:{cn:"泥人",de:"Matschklops",en:"the mudman",fr:"tas de boue",ja:"泥人",ko:"진흙인간"},rank:"A"}},r=t(0),i=t(6);t(23),t(5);const o={PopSound:"../../resources/sounds/PowerAuras/sonar.ogg",RankOptions:{S:{Type:"mob",Enabled:!0},"SS+":{Type:"mob",Enabled:!0},"SS-":{Type:"mob",Enabled:!0},A:{Type:"mob",Enabled:!0},B:{Type:"mob",Enabled:!0,PopSoundAlert:!1}},CustomMonsters:{}};let s;const l={en:r.a.gameLog({code:"0039",line:"You are now in the instanced area.*?"}),de:r.a.gameLog({code:"0039",line:"Du bist nun in dem instanziierten Areal.*?"}),fr:r.a.gameLog({code:"0039",line:"Vous êtes maintenant dans la zone instanciée.*?"}),ja:r.a.gameLog({code:"0039",line:"インスタンスエリア.*?"}),cn:r.a.gameLog({code:"0039",line:"当前所在副本区为.*?"}),ko:r.a.gameLog({code:"0039",line:"인스턴스 지역.*?"})};class d{constructor(e,a){this.x=e,this.y=a}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}delta(e){return new d(e.x-this.x,e.y-this.y)}distance(e){return this.delta(e).length()}}function u(e){return.02*e+21.5}function c(e,a){if(a.TTS)callOverlayHandler({call:"cactbotSay",text:e.rank+" "+e.name});else if(a.PopSoundAlert&&a.PopSound&&a.PopVolume){const e=new Audio(a.PopSound);e.volume=a.PopVolume,e.play()}}class m{constructor(e){this.targetMonsters={},this.playerPos={},this.playerRotation=0,this.table=e,this.options=o,this.monsters=Object.assign({},n,o.CustomMonsters),this.lang=this.options.ParserLanguage||"en",this.nameToMonster={},this.instanceChangedRegex=l[this.options.ParserLanguage]||l.en;for(const e in this.monsters){const a=this.monsters[e];if(a.name=a.name[this.lang]||a.name.en,"string"==typeof a.name)this.nameToMonster[a.name.toLowerCase()]=a;else for(let e=0;e<a.name.length;++e)this.nameToMonster[a.name[e].toLowerCase()]=a}}AddMonster(e,a,t){if(a.id&&t.npcNameId!==a.id)return;if(a.regex&&!a.regex.test(e))return;if(a.hp&&parseFloat(t.hp)<a.hp)return;if("0"===t.currentHp)return;let n=this.options;if(a.rank in n.RankOptions&&(n=Object.assign({},this.options,n.RankOptions[a.rank])),"B"===a.rank&&!n.BRankEnabled)return;if(!1===n.Enabled)return;if("mob"===n.Type){if(!t.id.startsWith("4"))return;if(!t.npcNameId||"0"===t.npcNameId)return}const r=t.name.toLowerCase();if(r in this.targetMonsters){const e=new d(this.playerPos.x,this.playerPos.y),a=this.targetMonsters[r].pos,i=new d(parseFloat(t.x),parseFloat(t.y)),o=e.distance(a);e.distance(i)<o&&(this.targetMonsters[r].pos=i,this.targetMonsters[r].posZ=t.z,this.UpdateMonsterDom(this.targetMonsters[r]),a.distance(i)>=100&&c(this.targetMonsters[r],n))}else{const e="arrow-"+t.id,i=document.createElement("tr");let o=document.createElement("th");const s=document.createElement("img");s.setAttribute("id",e),s.setAttribute("src","arrow.png"),s.setAttribute("class","radar-image-40"),o.appendChild(s),o.setAttribute("style","max-width: 100px"),i.appendChild(o),o=document.createElement("th"),o.setAttribute("align","left"),o.appendChild(document.createElement("div")),i.appendChild(o),this.table.insertBefore(i,this.table.childNodes[0]);const l={id:t.id,name:t.name,rank:a.rank||"",hp:parseFloat(t.hp),currentHp:parseFloat(t.hp),battleTime:0,pos:new d(parseFloat(t.x),parseFloat(t.y)),posZ:t.z,addTime:Date.now(),dom:i,puller:null,skipPuller:t.hp!==t.currentHp};this.targetMonsters[r]=l,this.UpdateMonsterDom(l);const m=u(l.pos.x).toFixed(1),p=u(l.pos.y).toFixed(1);console.log(`Found: ${a.name} (${m}, ${p})`),c(this.targetMonsters[r],n)}}UpdateMonsterPuller(e,a){this.options.Puller&&(null!==e.puller||e.skipPuller||(e.puller=a,this.UpdateMonsterDom(e),console.log(`Pulled: ${a} => ${e.name}`)))}UpdateMonsterDom(e){let a=this.options;e.rank in a.RankOptions&&(a=Object.assign({},this.options,a.RankOptions[e.rank]));const t=e.dom,n=new d(this.playerPos.x,this.playerPos.y),r=e.pos,i=new d(r.x-n.x,r.y-n.y);t&&(t.childNodes[1].innerHTML=e.rank+"&nbsp;&nbsp;&nbsp;&nbsp;"+e.name,Math.abs(this.playerPos.z-e.posZ)>5&&(t.childNodes[1].innerHTML+="&nbsp;&nbsp;"+(this.playerPos.z<e.posZ?"↑":"↓")),t.childNodes[1].innerHTML+="<br>"+i.length().toFixed(2)+"m",Date.now()/1e3<=e.battleTime+60&&(t.childNodes[1].innerHTML+=" "+(100*e.currentHp/e.hp).toFixed(2)+"%"),e.puller&&(t.childNodes[1].innerHTML+="&nbsp;&nbsp;"+e.puller),a.Position&&(t.childNodes[1].innerHTML+="<br>X: "+u(e.pos.x).toFixed(1)+"&nbsp;&nbsp;Y:"+u(e.pos.y).toFixed(1))),a.DetectionRange>0&&i.length()>a.DetectionRange?e.dom.classList.add("hide"):e.dom.classList.remove("hide");let o=Math.atan2(i.y,i.x);o-=Math.PI-this.playerRotation;const s=180*o/Math.PI,l="arrow-"+e.id;document.getElementById(l).style.transform="rotate("+s+"deg)"}RemoveMonster(e){e in this.targetMonsters&&(console.log("Killed: "+this.targetMonsters[e].name),this.targetMonsters[e].dom.remove(),delete this.targetMonsters[e])}OnNetLog(e){const a=e.line[0],t=e.rawLine;if("03"!==a)if("21"!==a&&"22"!==a)if("00"!==a)if("25"!==a);else{const e=t.match(r.a.wasDefeated());e&&this.RemoveMonster(e.groups.target.toLowerCase())}else this.instanceChangedRegex.test(t)&&this.ClearTargetMonsters(10);else{const e=t.match(r.a.abilityFull());if(e){const a=this.targetMonsters[e.groups.target.toLowerCase()];if(a){"1D6D"===e.groups.id||this.UpdateMonsterPuller(a,e.groups.source)}}}else{const e=t.match(r.a.addedCombatantFull());if(e){const a=this.nameToMonster[e.groups.name.toLowerCase()];a&&this.AddMonster(t,a,e.groups)}}}OnPlayerChange(e){this.playerPos.x=e.detail.pos.x,this.playerPos.y=e.detail.pos.y,this.playerPos.z=e.detail.pos.z,this.playerRotation=e.detail.rotation;for(const e in this.targetMonsters)this.UpdateMonsterDom(this.targetMonsters[e])}OnChangeZone(e){this.ClearTargetMonsters()}ClearTargetMonsters(e){const a=e||0;for(const e in this.targetMonsters)(Date.now()-this.targetMonsters[e].addTime)/1e3>a&&(this.targetMonsters[e].dom.remove(),delete this.targetMonsters[e])}}i.a.getUserConfigLocation("radar",o,()=>{addOverlayListener("LogLine",e=>{s.OnNetLog(e)}),addOverlayListener("onPlayerChangedEvent",e=>{s.OnPlayerChange(e)}),addOverlayListener("ChangeZone",e=>{s.OnChangeZone(e)}),s=new m(document.getElementById("radar-table"))})},4:function(e,a,t){"use strict";t.d(a,"a",(function(){return n}));class n{static startsUsing(e){void 0===e&&(e={}),n.validateParams(e,"startsUsing",["timestamp","source","id","ability","target","capture"]);const a=n.trueIfUndefined(e.capture);let t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 14:"+n.maybeCapture(a,"id",e.id,"\\y{AbilityCode}")+":";return(e.source||e.id||e.target||a)&&(t+=n.maybeCapture(a,"source",e.source,".*?")+" starts using "),(e.ability||e.target||a)&&(t+=n.maybeCapture(a,"ability",e.ability,".*?")+" on "),(e.target||a)&&(t+=n.maybeCapture(a,"target",e.target,".*?")+"\\."),n.parse(t)}static ability(e){void 0===e&&(e={}),n.validateParams(e,"ability",["timestamp","source","sourceId","id","ability","targetId","target","capture"]);const a=n.trueIfUndefined(e.capture);let t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 1[56]:"+n.maybeCapture(a,"sourceId","\\y{ObjectId}")+":"+n.maybeCapture(a,"source",e.source,"[^:]*?")+":";return(e.id||e.ability||e.target||e.targetId||a)&&(t+=n.maybeCapture(a,"id",e.id,"\\y{AbilityCode}")+":"),(e.ability||e.target||e.targetId||a)&&(t+=n.maybeCapture(a,"ability",e.ability,"[^:]*?")+":"),(e.target||e.targetId||a)&&(t+=n.maybeCapture(a,"targetId","\\y{ObjectId}")+":"),(e.target||a)&&(t+=n.maybeCapture(a,"target",e.target,"[^:]*?")+":"),n.parse(t)}static abilityFull(e){void 0===e&&(e={}),n.validateParams(e,"abilityFull",["timestamp","sourceId","source","id","ability","targetId","target","flags","flag0","flag1","flag2","flag3","flag4","flag5","flag6","flag7","flag8","flag9","flag10","flag11","flag12","flag13","flag14","targetHp","targetMaxHp","targetMp","targetMaxMp","targetX","targetY","targetZ","targetHeading","hp","maxHp","mp","maxMp","x","y","z","heading","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 1[56]:"+n.maybeCapture(a,"sourceId",e.sourceId,"\\y{ObjectId}")+":"+n.maybeCapture(a,"source",e.source,"[^:]*?")+":"+n.maybeCapture(a,"id",e.id,"\\y{AbilityCode}")+":"+n.maybeCapture(a,"ability",e.ability,"[^:]*?")+":"+n.maybeCapture(a,"targetId",e.targetId,"\\y{ObjectId}")+":"+n.maybeCapture(a,"target",e.target,"[^:]*?")+":"+n.maybeCapture(a,"flags",e.flags,"[^:]*?")+":"+n.maybeCapture(a,"flag0",e.flag0,"[^:]*?")+":"+n.maybeCapture(a,"flag1",e.flag1,"[^:]*?")+":"+n.maybeCapture(a,"flag2",e.flag2,"[^:]*?")+":"+n.maybeCapture(a,"flag3",e.flag3,"[^:]*?")+":"+n.maybeCapture(a,"flag4",e.flag4,"[^:]*?")+":"+n.maybeCapture(a,"flag5",e.flag5,"[^:]*?")+":"+n.maybeCapture(a,"flag6",e.flag6,"[^:]*?")+":"+n.maybeCapture(a,"flag7",e.flag7,"[^:]*?")+":"+n.maybeCapture(a,"flag8",e.flag8,"[^:]*?")+":"+n.maybeCapture(a,"flag9",e.flag9,"[^:]*?")+":"+n.maybeCapture(a,"flag10",e.flag10,"[^:]*?")+":"+n.maybeCapture(a,"flag11",e.flag11,"[^:]*?")+":"+n.maybeCapture(a,"flag12",e.flag12,"[^:]*?")+":"+n.maybeCapture(a,"flag13",e.flag13,"[^:]*?")+":"+n.maybeCapture(a,"flag14",e.flag13,"[^:]*?")+":"+n.optional(n.maybeCapture(a,"targetHp",e.targetHp,"\\y{Float}"))+":"+n.optional(n.maybeCapture(a,"targetMaxHp",e.targetMaxHp,"\\y{Float}"))+":"+n.optional(n.maybeCapture(a,"targetMp",e.targetMp,"\\y{Float}"))+":"+n.optional(n.maybeCapture(a,"targetMaxMp",e.targetMaxMp,"\\y{Float}"))+":"+n.optional("\\y{Float}")+":"+n.optional("\\y{Float}")+":"+n.optional(n.maybeCapture(a,"targetX",e.targetX,"\\y{Float}"))+":"+n.optional(n.maybeCapture(a,"targetY",e.targetY,"\\y{Float}"))+":"+n.optional(n.maybeCapture(a,"targetZ",e.targetZ,"\\y{Float}"))+":"+n.optional(n.maybeCapture(a,"targetHeading",e.targetHeading,"\\y{Float}"))+":"+n.maybeCapture(a,"hp",e.hp,"\\y{Float}")+":"+n.maybeCapture(a,"maxHp",e.maxHp,"\\y{Float}")+":"+n.maybeCapture(a,"mp",e.mp,"\\y{Float}")+":"+n.maybeCapture(a,"maxMp",e.maxMp,"\\y{Float}")+":\\y{Float}:\\y{Float}:"+n.maybeCapture(a,"x",e.x,"\\y{Float}")+":"+n.maybeCapture(a,"y",e.y,"\\y{Float}")+":"+n.maybeCapture(a,"z",e.z,"\\y{Float}")+":"+n.maybeCapture(a,"heading",e.heading,"\\y{Float}")+":.*?$";return n.parse(t)}static headMarker(e){void 0===e&&(e={}),n.validateParams(e,"headMarker",["timestamp","targetId","target","id","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 1B:"+n.maybeCapture(a,"targetId",e.targetId,"\\y{ObjectId}")+":"+n.maybeCapture(a,"target",e.target,"[^:]*?")+":....:....:"+n.maybeCapture(a,"id",e.id,"....")+":";return n.parse(t)}static addedCombatant(e){void 0===e&&(e={}),n.validateParams(e,"addedCombatant",["timestamp","name","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 03:\\y{ObjectId}:Added new combatant "+n.maybeCapture(a,"name",e.name,".*?")+"\\.";return n.parse(t)}static addedCombatantFull(e){void 0===e&&(e={}),n.validateParams(e,"addedCombatantFull",["timestamp","id","name","job","level","hp","x","y","z","npcId","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 03:"+n.maybeCapture(a,"id",e.id,"\\y{ObjectId}")+":Added new combatant "+n.maybeCapture(a,"name",e.name,"[^:]*?")+"\\. {2}Job: "+n.maybeCapture(a,"job",e.job,"[^:]*?")+" Level: "+n.maybeCapture(a,"level",e.level,"[^:]*?")+" Max HP: "+n.maybeCapture(a,"hp",e.hp,"[0-9]+")+"..*?Pos: \\("+n.maybeCapture(a,"x",e.x,"\\y{Float}")+","+n.maybeCapture(a,"y",e.y,"\\y{Float}")+","+n.maybeCapture(a,"z",e.z,"\\y{Float}")+"\\)(?: \\("+n.maybeCapture(a,"npcId",e.npcId,".*?")+"\\))?\\.";return n.parse(t)}static removingCombatant(e){void 0===e&&(e={}),n.validateParams(e,"removingCombatant",["timestamp","id","name","hp","capture","x","y","z"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 04:"+n.maybeCapture(a,"id","\\y{ObjectId}")+":Removing combatant "+n.maybeCapture(a,"name",e.name,".*?")+"\\..*?Max HP: "+n.maybeCapture(a,"hp",e.hp,"[0-9]+")+"."+n.optional(".*?Pos: \\("+n.maybeCapture(a,"x",e.x,"\\y{Float}")+","+n.maybeCapture(a,"y",e.y,"\\y{Float}")+","+n.maybeCapture(a,"z",e.z,"\\y{Float}")+"\\)");return n.parse(t)}static gainsEffect(e){void 0===e&&(e={}),n.validateParams(e,"gainsEffect",["timestamp","targetId","target","effect","source","duration","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 1A:"+n.maybeCapture(a,"targetId",e.targetId,"\\y{ObjectId}")+":"+n.maybeCapture(a,"target",e.target,".*?")+" gains the effect of "+n.maybeCapture(a,"effect",e.effect,".*?")+" from "+n.maybeCapture(a,"source",e.source,".*?")+" for "+n.maybeCapture(a,"duration",e.duration,"\\y{Float}")+" Seconds\\.";return n.parse(t)}static statusEffectExplicit(e){void 0===e&&(e={}),n.validateParams(e,"statusEffectExplicit",["timestamp","targetId","target","job","hp","maxHp","mp","maxMp","x","y","z","heading","data0","data1","data2","data3","data4","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 26:"+n.maybeCapture(a,"targetId",e.targetId,"\\y{ObjectId}")+":"+n.maybeCapture(a,"target",e.target,"[^:]*?")+":[0-9A-F]{0,6}"+n.maybeCapture(a,"job",e.job,"[0-9A-F]{0,2}")+":"+n.maybeCapture(a,"hp",e.hp,"\\y{Float}")+":"+n.maybeCapture(a,"maxHp",e.maxHp,"\\y{Float}")+":"+n.maybeCapture(a,"mp",e.mp,"\\y{Float}")+":"+n.maybeCapture(a,"maxMp",e.maxMp,"\\y{Float}")+":.*?:.*?:"+n.optional(n.maybeCapture(a,"x",e.x,"\\y{Float}"))+":"+n.optional(n.maybeCapture(a,"y",e.y,"\\y{Float}"))+":"+n.optional(n.maybeCapture(a,"z",e.z,"\\y{Float}"))+":"+n.optional(n.maybeCapture(a,"heading",e.heading,"\\y{Float}"))+":"+n.maybeCapture(a,"data0",e.data0,"[^:]*?")+":"+n.maybeCapture(a,"data1",e.data1,"[^:]*?")+":"+n.optional(n.maybeCapture(a,"data2",e.data2,"[^:]*?")+":")+n.optional(n.maybeCapture(a,"data3",e.data3,"[^:]*?")+":")+n.optional(n.maybeCapture(a,"data4",e.data4,"[^:]*?")+":");return n.parse(t)}static losesEffect(e){void 0===e&&(e={}),n.validateParams(e,"losesEffect",["timestamp","targetId","target","effect","source","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 1E:"+n.maybeCapture(a,"targetId",e.targetId,"\\y{ObjectId}")+":"+n.maybeCapture(a,"target",e.target,".*?")+" loses the effect of "+n.maybeCapture(a,"effect",e.effect,".*?")+" from "+n.maybeCapture(a,"source",e.source,".*?")+"\\.";return n.parse(t)}static tether(e){void 0===e&&(e={}),n.validateParams(e,"tether",["timestamp","source","sourceId","target","targetId","id","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 23:"+n.maybeCapture(a,"sourceId",e.sourceId,"\\y{ObjectId}")+":"+n.maybeCapture(a,"source",e.source,"[^:]*?")+":"+n.maybeCapture(a,"targetId",e.targetId,"\\y{ObjectId}")+":"+n.maybeCapture(a,"target",e.target,"[^:]*?")+":....:....:"+n.maybeCapture(a,"id",e.id,"....")+":";return n.parse(t)}static wasDefeated(e){void 0===e&&(e={}),n.validateParams(e,"wasDefeated",["timestamp","target","source","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 19:"+n.maybeCapture(a,"target",e.target,".*?")+" was defeated by "+n.maybeCapture(a,"source",e.source,".*?")+"\\.";return n.parse(t)}static hasHP(e){void 0===e&&(e={}),n.validateParams(e,"hasHP",["timestamp","name","hp","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 0D:"+n.maybeCapture(a,"name",e.name,".*?")+" HP at "+n.maybeCapture(a,"hp",e.hp,"\\d+")+"%";return n.parse(t)}static echo(e){return void 0===e&&(e={}),n.validateParams(e,"echo",["timestamp","code","line","capture"]),n.gameLog({line:e.line,capture:e.capture,code:"0038"})}static dialog(e){void 0===e&&(e={}),n.validateParams(e,"dialog",["timestamp","code","line","name","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 00:"+n.maybeCapture(a,"code","0044")+":"+n.maybeCapture(a,"name",e.name,".*?")+":"+n.maybeCapture(a,"line",e.line,".*")+"$";return n.parse(t)}static message(e){return void 0===e&&(e={}),n.validateParams(e,"message",["timestamp","code","line","capture"]),n.gameLog({line:e.line,capture:e.capture,code:"0839"})}static gameLog(e){void 0===e&&(e={}),n.validateParams(e,"gameLog",["timestamp","code","line","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 00:"+n.maybeCapture(a,"code",e.code,"....")+":"+n.maybeCapture(a,"line",e.line,".*")+"$";return n.parse(t)}static gameNameLog(e){void 0===e&&(e={}),n.validateParams(e,"gameNameLog",["timestamp","code","name","line","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 00:"+n.maybeCapture(a,"code",e.code,"....")+":"+n.maybeCapture(a,"name",e.name,"[^:]*")+":"+n.maybeCapture(a,"line",e.line,".*")+"$";return n.parse(t)}static statChange(e){void 0===e&&(e={}),n.validateParams(e,"statChange",["timestamp","job","strength","dexterity","vitality","intelligence","mind","piety","attackPower","directHit","criticalHit","attackMagicPotency","healMagicPotency","determination","skillSpeed","spellSpeed","tenacity","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 0C:Player Stats: "+n.maybeCapture(a,"job",e.job,"\\d+")+":"+n.maybeCapture(a,"strength",e.strength,"\\d+")+":"+n.maybeCapture(a,"dexterity",e.dexterity,"\\d+")+":"+n.maybeCapture(a,"vitality",e.vitality,"\\d+")+":"+n.maybeCapture(a,"intelligence",e.intelligence,"\\d+")+":"+n.maybeCapture(a,"mind",e.mind,"\\d+")+":"+n.maybeCapture(a,"piety",e.piety,"\\d+")+":"+n.maybeCapture(a,"attackPower",e.attackPower,"\\d+")+":"+n.maybeCapture(a,"directHit",e.directHit,"\\d+")+":"+n.maybeCapture(a,"criticalHit",e.criticalHit,"\\d+")+":"+n.maybeCapture(a,"attackMagicPotency",e.attackMagicPotency,"\\d+")+":"+n.maybeCapture(a,"healMagicPotency",e.healMagicPotency,"\\d+")+":"+n.maybeCapture(a,"determination",e.determination,"\\d+")+":"+n.maybeCapture(a,"skillSpeed",e.skillSpeed,"\\d+")+":"+n.maybeCapture(a,"spellSpeed",e.spellSpeed,"\\d+")+":0:"+n.maybeCapture(a,"tenacity",e.tenacity,"\\d+");return n.parse(t)}static changeZone(e){void 0===e&&(e={}),n.validateParams(e,"statChange",["timestamp","name","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 01:Changed Zone to "+n.maybeCapture(a,"name",e.name,".*?")+"\\.";return n.parse(t)}static network6d(e){void 0===e&&(e={}),n.validateParams(e,"network6d",["timestamp","instance","command","data0","data1","data2","data3","capture"]);const a=n.trueIfUndefined(e.capture),t=n.maybeCapture(a,"timestamp","\\y{Timestamp}")+" 21:"+n.maybeCapture(a,"instance",e.instance,".*?")+":"+n.maybeCapture(a,"command",e.command,".*?")+":"+n.maybeCapture(a,"data0",e.data0,".*?")+":"+n.maybeCapture(a,"data1",e.data1,".*?")+":"+n.maybeCapture(a,"data2",e.data2,".*?")+":"+n.maybeCapture(a,"data3",e.data3,".*?")+"$";return n.parse(t)}static maybeCapture(e,a,t,r){return t||(t=r),t=n.anyOf(t),e?n.namedCapture(a,t):t}static optional(e){return`(?:${e})?`}static namedCapture(e,a){return e.includes(">")&&console.error('"'+e+'" contains ">".'),e.includes("<")&&console.error('"'+e+'" contains ">".'),"(?<"+e+">"+a+")"}static anyOf(...e){let a;if(1===e.length){if(!Array.isArray(e[0]))return e[0];a=e[0]}else a=e;let t="(?:"+(a[0]instanceof RegExp?a[0].source:a[0]);for(let e=1;e<a.length;++e)t+="|"+(a[e]instanceof RegExp?a[e].source:a[e]);return t+=")",t}static parse(e){const a={Timestamp:"^.{14}",NetTimestamp:".{33}",NetField:"(?:[^|]*\\|)",LogType:"[0-9A-Fa-f]{2}",AbilityCode:"[0-9A-Fa-f]{1,8}",ObjectId:"[0-9A-F]{8}",Name:"(?:[^\\s:|]+(?: [^\\s:|]+)?|)",Float:"-?[0-9]+(?:[.,][0-9]+)?(?:E-?[0-9]+)?"};let t="i";return e instanceof RegExp&&(t+=(e.global?"g":"")+(e.multiline?"m":""),e=e.source),e=e.replace(/\\y\{(.*?)\}/g,(e,t)=>a[t]||e),new RegExp(e,t)}static parseGlobal(e){const a=n.parse(e);let t="gi";return t+=e.multiline?"m":"",new RegExp(a.source,t)}static trueIfUndefined(e){return void 0===e||!!e}static validateParams(e,a,t){if(null===e)return;if("object"!=typeof e)return;const n=Object.keys(e);for(let e=0;e<n.length;++e){const r=n[e];if(!t.includes(r))throw new Error(`${a}: invalid parameter '${r}'.  Valid params: `+JSON.stringify(t))}}}},5:function(e,a,t){"use strict";t.d(a,"a",(function(){return n}));const n=(()=>{const e=["GLA","PLD","MRD","WAR","DRK","GNB"],a=["CNJ","WHM","SCH","AST"],t=["PGL","MNK","LNC","DRG","ROG","NIN","SAM"],n=["ARC","BRD","DNC","MCH"],r=["BLU","RDM","BLM","SMN","ACN","THM"],i=[...t,...n,...r],o=["CRP","BSM","ARM","GSM","LTW","WVR","ALC","CUL"],s=["MIN","BTN","FSH"],l=["BLU",...e,...t],d=["BLU",...e,...n],u=["BLM","BLU",...a],c=[...t],m=[...r],p=["BLU","BRD",...a],h=["tank","healer","dps","crafter","gatherer","none"],f={0:"NONE",1:"GLA",2:"PGL",3:"MRD",4:"LNC",5:"ARC",6:"CNJ",7:"THM",8:"CRP",9:"BSM",10:"ARM",11:"GSM",12:"LTW",13:"WVR",14:"ALC",15:"CUL",16:"MIN",17:"BTN",18:"FSH",19:"PLD",20:"MNK",21:"WAR",22:"DRG",23:"BRD",24:"WHM",25:"BLM",26:"ACN",27:"SMN",28:"SCH",29:"ROG",30:"NIN",31:"MCH",32:"DRK",33:"AST",34:"SAM",35:"RDM",36:"BLU",37:"GNB",38:"DNC"},g=(()=>{const t=(e,a,t)=>a.forEach(a=>e.set(a,t)),n=new Map([["NONE","none"]]);return t(n,e,"tank"),t(n,a,"healer"),t(n,i,"dps"),t(n,o,"crafter"),t(n,s,"gatherer"),new Proxy(n,{get:function(e,a){return e.has(a)?e.get(a):(console.log("Unknown job role "+a),"")}})})();return{jobEnumToJob:e=>f[e],jobToJobEnum:e=>Object.keys(f).find(a=>f[a]===e),jobToRole:e=>g[e],getAllRoles:()=>h,isTankJob:a=>e.includes(a),isHealerJob:e=>a.includes(e),isMeleeDpsJob:e=>t.includes(e),isRangedDpsJob:e=>n.includes(e),isCasterDpsJob:e=>r.includes(e),isDpsJob:e=>i.includes(e),isCraftingJob:e=>o.includes(e),isGatheringJob:e=>s.includes(e),isCombatJob:function(e){return!this.isCraftingJob(e)&&!this.isGatheringJob(e)},canStun:e=>l.includes(e),canSilence:e=>d.includes(e),canSleep:e=>u.includes(e),canCleanse:e=>p.includes(e),canFeint:e=>c.includes(e),canAddle:e=>m.includes(e)}})();!function(){if("undefined"==typeof location)return;const e=/[\?&]OVERLAY_WS=([^&]+)/.exec(location.href);let a=null,t=[],n=0;const r={},i={};let o=null;if(e){o=e=>{t?t.push(e):a.send(JSON.stringify(e))};const n=function(){a=new WebSocket(e[1]),a.addEventListener("error",e=>{console.error(e)}),a.addEventListener("open",()=>{console.log("Connected!");const e=t;t=null,o({call:"subscribe",events:Object.keys(i)});for(const a of e)o(a)}),a.addEventListener("message",e=>{try{e=JSON.parse(e.data)}catch(a){return void console.error("Invalid message received: ",e)}void 0!==e.rseq&&r[e.rseq]?(r[e.rseq](e),delete r[e.rseq]):s(e)}),a.addEventListener("close",()=>{t=[],console.log("Trying to reconnect..."),setTimeout(()=>{n()},300)})};n()}else{o=(e,a)=>{t?t.push([e,a]):OverlayPluginApi.callHandler(JSON.stringify(e),a)};const e=function(){if(!window.OverlayPluginApi||!window.OverlayPluginApi.ready)return void setTimeout(e,300);const a=t;t=null,window.__OverlayCallback=s,o({call:"subscribe",events:Object.keys(i)},null);for(const[e,t]of a)o(e,t)};e()}function s(e){if(i[e.type])for(const a of i[e.type])a(e)}window.dispatchOverlayEvent=s,window.addOverlayListener=(e,a)=>{i[e]||(i[e]=[],t||o({call:"subscribe",events:[e]})),i[e].push(a)},window.removeOverlayListener=(e,a)=>{if(i[e]){const t=i[e],n=t.indexOf(a);n>-1&&t.splice(n,1)}},window.callOverlayHandler=e=>{let t;return a?(e.rseq=n++,t=new Promise((a,t)=>{r[e.rseq]=a}),o(e)):t=new Promise(a=>{o(e,e=>{a(null===e?null:JSON.parse(e))})}),t}}()},6:function(module,__webpack_exports__,__webpack_require__){"use strict";var _conditions_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2),_netregexes_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_regexes_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(4),_responses_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(1),_zone_id_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(3);const Conditions=_conditions_js__WEBPACK_IMPORTED_MODULE_0__.a,NetRegexes=_netregexes_js__WEBPACK_IMPORTED_MODULE_1__.a,Regexes=_regexes_js__WEBPACK_IMPORTED_MODULE_2__.a,Responses=_responses_js__WEBPACK_IMPORTED_MODULE_3__.a,ZoneId=_zone_id_js__WEBPACK_IMPORTED_MODULE_4__.a;class UserConfig{constructor(){this.optionTemplates={},this.savedConfig=null,this.userFileCallbacks={}}registerOptions(e,a,t){this.optionTemplates[e]=a,t&&(this.userFileCallbacks[e]=t)}getUserConfigLocation(overlayName,options,callback){let currentlyReloading=!1;const reloadOnce=()=>{currentlyReloading||(currentlyReloading=!0,window.location.reload())};window.addOverlayListener("onUserFileChanged",()=>{reloadOnce()}),window.addOverlayListener("onForceReload",()=>{reloadOnce()});const readOptions=callOverlayHandler({call:"cactbotLoadData",overlay:"options"}),loadUser=async e=>{const localFiles=e.detail.localUserFiles;let basePath=e.detail.userLocation;const jsFile=overlayName+".js",cssFile=overlayName+".css";e.detail.language&&(options.ParserLanguage=e.detail.language,options.ShortLocale=e.detail.language,options.DisplayLanguage=e.detail.language),e.detail.parserLanguage&&(options.ParserLanguage=e.detail.parserLanguage,options.Language=e.detail.parserLanguage);const supportedLanguage=["en","de","fr","ja","cn","ko"];e.detail.systemLocale&&(options.SystemLocale=e.detail.systemLocale,options.ShortLocale=e.detail.systemLocale.substring(0,2),"zh"===options.ShortLocale&&(options.ShortLocale="cn"),supportedLanguage.includes(options.ShortLocale)||(options.ShortLocale=options.ParserLanguage)),options.DisplayLanguage=e.detail.displayLanguage,supportedLanguage.includes(options.DisplayLanguage)||(options.DisplayLanguage=options.ParserLanguage||"en"),document.body.classList.add("lang-"+options.DisplayLanguage),this.addUnlockText(options.DisplayLanguage);const userOptions=await readOptions||{};this.savedConfig=userOptions.data||{},this.processOptions(options,this.savedConfig[overlayName]||{},this.optionTemplates[overlayName]);const printUserFile=options.Debug?e=>console.log(e):e=>{};if(localFiles){if(jsFile in localFiles)try{printUserFile("local user file: "+basePath+"\\"+jsFile);const Options=options;eval(localFiles[jsFile]),this.userFileCallbacks[overlayName]&&this.userFileCallbacks[overlayName](jsFile,localFiles,options)}catch(e){console.log("*** ERROR IN USER FILE ***"),console.log(e.stack)}if(this.handleSkin(options.Skin),cssFile in localFiles){printUserFile("local user file: "+basePath+"\\"+cssFile);const e=document.createElement("style");e.innerText=localFiles[cssFile],document.getElementsByTagName("head")[0].appendChild(e)}}else if(basePath){"/"!==basePath.slice(-1)&&(basePath+="/");const e=basePath+jsFile;printUserFile("remote user file: "+e),this.appendJSLink(e),this.handleSkin(options.Skin);const a=basePath+cssFile;printUserFile("remote user file: "+a),this.appendCSSLink(a)}callback&&callback(),callOverlayHandler({call:"cactbotRequestState"})};callOverlayHandler({call:"cactbotLoadUser",source:location.href}).then(e=>{"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{loadUser(e)}):loadUser(e)})}handleSkin(e){if(!e||"default"===e)return;let a=document.location.toString();const t=a.lastIndexOf("/");-1!==t&&(a=a.substr(0,t)),"/"!==a.slice(-1)&&(a+="/");const n=a+"skins/"+e+"/"+e+".css";this.appendCSSLink(n)}appendJSLink(e){const a=document.createElement("script");a.setAttribute("type","text/javascript"),a.setAttribute("src",e),a.setAttribute("async",!1),document.getElementsByTagName("head")[0].appendChild(a)}appendCSSLink(e){const a=document.createElement("link");a.setAttribute("rel","stylesheet"),a.setAttribute("type","text/css"),a.setAttribute("href",e),document.getElementsByTagName("head")[0].appendChild(a)}processOptions(e,a,t){if(Array.isArray(t)){for(let n=0;n<t.length;++n)this.processOptions(e,a,t[n]);return}if(!t)return;const n=t.options||[];for(let t=0;t<n.length;++t){const r=n[t],i=r.id in a?a[r.id]:r.default;r.setterFunc?r.setterFunc(e,i):"integer"===r.type?e[r.id]=parseInt(i):"float"===r.type?e[r.id]=parseFloat(i):e[r.id]=i}t.processExtraOptions&&t.processExtraOptions(e,a)}addUnlockText(e){const a={en:"🔓 Unlocked (lock overlay before using)",de:"🔓 Entsperrt (Sperre das Overlay vor der Nutzung)",fr:"🔓 Débloqué (Bloquez l'overlay avant utilisation)",ja:"🔓 ロック解除 (オーバーレイを使用する前にロックしてください)",cn:"🔓 已解除锁定 (你需要将此悬浮窗锁定后方可使用)",ko:"🔓 위치 잠금 해제됨 (사용하기 전에 위치 잠금을 설정하세요)"},t="cactbot-unlocked-text";let n=document.getElementById(t);n||(n=document.createElement("div"),n.id=t,n.classList.add("text"),n.style.display="none",document.body.append(n)),n.innerHTML=a[e]||a.en}}__webpack_exports__.a=new UserConfig,document.addEventListener("onOverlayStateUpdate",e=>{const a=document.documentElement.classList;e.detail.isLocked?a.remove("resizeHandle","unlocked"):a.add("resizeHandle","unlocked")})}});